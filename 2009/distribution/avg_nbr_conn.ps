%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 21:15:06 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 21:15:06 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
5398 0 R
-63 0 V
stroke
1210 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.001)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 1317 M
31 0 V
5430 0 R
-31 0 V
1342 1675 M
31 0 V
5430 0 R
-31 0 V
1342 1929 M
31 0 V
5430 0 R
-31 0 V
1342 2127 M
31 0 V
5430 0 R
-31 0 V
1342 2288 M
31 0 V
5430 0 R
-31 0 V
1342 2424 M
31 0 V
5430 0 R
-31 0 V
1342 2542 M
31 0 V
5430 0 R
-31 0 V
1342 2646 M
31 0 V
5430 0 R
-31 0 V
-5430 94 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 3352 M
31 0 V
5430 0 R
-31 0 V
1342 3711 M
31 0 V
5430 0 R
-31 0 V
1342 3965 M
31 0 V
5430 0 R
-31 0 V
1342 4162 M
31 0 V
5430 0 R
-31 0 V
1342 4323 M
31 0 V
5430 0 R
-31 0 V
1342 4460 M
31 0 V
5430 0 R
-31 0 V
1342 4578 M
31 0 V
5430 0 R
-31 0 V
1342 4682 M
31 0 V
5430 0 R
-31 0 V
-5430 93 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1342 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1753 704 M
0 31 V
0 4040 R
0 -31 V
1993 704 M
0 31 V
0 4040 R
0 -31 V
2164 704 M
0 31 V
0 4040 R
0 -31 V
2296 704 M
0 31 V
0 4040 R
0 -31 V
2404 704 M
0 31 V
0 4040 R
0 -31 V
2496 704 M
0 31 V
0 4040 R
0 -31 V
2575 704 M
0 31 V
0 4040 R
0 -31 V
2645 704 M
0 31 V
0 4040 R
0 -31 V
2707 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2707 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3118 704 M
0 31 V
0 4040 R
0 -31 V
3359 704 M
0 31 V
0 4040 R
0 -31 V
3529 704 M
0 31 V
0 4040 R
0 -31 V
3662 704 M
0 31 V
0 4040 R
0 -31 V
3770 704 M
0 31 V
0 4040 R
0 -31 V
3861 704 M
0 31 V
0 4040 R
0 -31 V
3940 704 M
0 31 V
0 4040 R
0 -31 V
4010 704 M
0 31 V
0 4040 R
0 -31 V
4073 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4073 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4483 704 M
0 31 V
0 4040 R
0 -31 V
4724 704 M
0 31 V
0 4040 R
0 -31 V
4894 704 M
0 31 V
0 4040 R
0 -31 V
5027 704 M
0 31 V
0 4040 R
0 -31 V
5135 704 M
0 31 V
0 4040 R
0 -31 V
5226 704 M
0 31 V
0 4040 R
0 -31 V
5305 704 M
0 31 V
0 4040 R
0 -31 V
5375 704 M
0 31 V
0 4040 R
0 -31 V
5438 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5438 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5849 704 M
0 31 V
0 4040 R
0 -31 V
6089 704 M
0 31 V
0 4040 R
0 -31 V
6260 704 M
0 31 V
0 4040 R
0 -31 V
6392 704 M
0 31 V
0 4040 R
0 -31 V
6500 704 M
0 31 V
0 4040 R
0 -31 V
6592 704 M
0 31 V
0 4040 R
0 -31 V
6671 704 M
0 31 V
0 4040 R
0 -31 V
6741 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4072 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1342 3285 M
411 -570 V
240 43 V
171 165 V
132 43 V
108 32 V
92 63 V
79 -3 V
70 129 V
62 -146 V
57 199 V
51 46 V
48 -20 V
44 31 V
41 156 V
38 -16 V
36 47 V
34 158 V
32 -86 V
30 -74 V
29 188 V
28 -91 V
26 10 V
25 148 V
25 -17 V
23 92 V
22 69 V
22 -33 V
21 5 V
20 7 V
19 98 V
19 -60 V
18 57 V
18 -100 V
17 237 V
17 -124 V
16 306 V
16 -215 V
15 -59 V
15 -125 V
15 289 V
14 -13 V
14 -76 V
14 18 V
13 1 V
13 118 V
13 -137 V
12 55 V
13 -35 V
12 -3 V
11 -24 V
12 31 V
11 145 V
11 0 V
11 -567 V
11 429 V
10 173 V
11 -248 V
10 273 V
10 5 V
9 39 V
10 -93 V
10 54 V
9 -4 V
9 -171 V
9 126 V
9 -92 V
9 209 V
8 -257 V
9 107 V
8 -77 V
9 51 V
8 60 V
8 -35 V
8 4 V
8 -26 V
8 81 V
7 -82 V
8 -126 V
15 305 V
7 -109 V
7 112 V
7 -43 V
7 -98 V
7 43 V
7 -217 V
7 202 V
6 24 V
7 -50 V
7 -78 V
6 3 V
6 222 V
7 -179 V
6 34 V
6 -59 V
6 -193 V
7 435 V
6 -73 V
6 12 V
5 30 V
6 -196 V
6 91 V
6 -223 V
stroke 4096 4072 M
11 180 V
6 51 V
11 -64 V
10 2 V
6 168 V
10 -173 V
5 113 V
6 58 V
5 -142 V
5 -11 V
5 79 V
5 -81 V
5 130 V
4 -81 V
5 -45 V
5 106 V
5 70 V
5 -30 V
4 -31 V
5 0 V
4 -217 V
5 75 V
5 199 V
4 -118 V
5 -132 V
4 175 V
4 -105 V
5 64 V
4 -87 V
4 159 V
5 36 V
4 -301 V
4 189 V
4 59 V
5 86 V
8 -68 V
4 105 V
4 -93 V
8 -8 V
4 -34 V
16 -142 V
11 116 V
4 -24 V
3 102 V
8 -69 V
11 -339 V
3 370 V
4 42 V
4 -53 V
7 -34 V
3 15 V
10 -91 V
7 71 V
4 34 V
3 19 V
3 -291 V
7 141 V
10 167 V
3 -388 V
13 333 V
3 -98 V
3 50 V
3 -22 V
6 48 V
3 24 V
3 -59 V
7 -19 V
3 74 V
5 38 V
6 -147 V
3 6 V
3 -83 V
3 32 V
3 97 V
3 9 V
17 106 V
5 -104 V
3 -39 V
3 -27 V
3 -9 V
2 -6 V
6 -9 V
2 155 V
3 -117 V
3 128 V
15 -195 V
3 141 V
5 -117 V
3 77 V
2 12 V
5 5 V
5 -30 V
5 26 V
7 -26 V
8 -46 V
4 66 V
5 -30 V
3 -101 V
2 123 V
7 -81 V
2 -57 V
2 39 V
3 -42 V
2 142 V
stroke 4639 4268 M
16 -52 V
4 -13 V
11 9 V
2 29 V
2 -16 V
13 -50 V
4 95 V
2 -57 V
7 1 V
14 -104 V
12 29 V
4 59 V
2 9 V
13 -50 V
4 -137 V
6 143 V
7 -83 V
9 124 V
8 -75 V
1 70 V
9 -126 V
11 36 V
5 37 V
12 -28 V
13 -94 V
2 73 V
2 -46 V
5 78 V
6 -41 V
3 29 V
8 -8 V
3 -64 V
5 14 V
6 38 V
6 -2 V
6 -30 V
21 -16 V
5 44 V
3 -52 V
1 31 V
4 -6 V
20 -33 V
20 32 V
21 -23 V
3 -132 V
1 95 V
5 -4 V
8 20 V
5 -15 V
16 -23 V
19 -75 V
3 87 V
3 -18 V
1 -29 V
1 58 V
5 -20 V
8 -9 V
7 -53 V
57 -31 V
1 19 V
4 4 V
39 -47 V
30 -49 V
6 2 V
102 -77 V
33 -48 V
41 -15 V
9 -8 V
13 -47 V
99 -86 V
1342 3285 Pls
1753 2715 Pls
1993 2758 Pls
2164 2923 Pls
2296 2966 Pls
2404 2998 Pls
2496 3061 Pls
2575 3058 Pls
2645 3187 Pls
2707 3041 Pls
2764 3240 Pls
2815 3286 Pls
2863 3266 Pls
2907 3297 Pls
2948 3453 Pls
2986 3437 Pls
3022 3484 Pls
3056 3642 Pls
3088 3556 Pls
3118 3482 Pls
3147 3670 Pls
3175 3579 Pls
3201 3589 Pls
3226 3737 Pls
3251 3720 Pls
3274 3812 Pls
3296 3881 Pls
3318 3848 Pls
3339 3853 Pls
3359 3860 Pls
3378 3958 Pls
3397 3898 Pls
3415 3955 Pls
3433 3855 Pls
3450 4092 Pls
3467 3968 Pls
3483 4274 Pls
3499 4059 Pls
3514 4000 Pls
3529 3875 Pls
3544 4164 Pls
3558 4151 Pls
3572 4075 Pls
3586 4093 Pls
3599 4094 Pls
3612 4212 Pls
3625 4075 Pls
3637 4130 Pls
3650 4095 Pls
3662 4092 Pls
3673 4068 Pls
3685 4099 Pls
3696 4244 Pls
3707 4244 Pls
3718 3677 Pls
3729 4106 Pls
3739 4279 Pls
3750 4031 Pls
3760 4304 Pls
3770 4309 Pls
3779 4348 Pls
3789 4255 Pls
3799 4309 Pls
3808 4305 Pls
3817 4134 Pls
3826 4260 Pls
3835 4168 Pls
3844 4377 Pls
3852 4120 Pls
3861 4227 Pls
3869 4150 Pls
3878 4201 Pls
3886 4261 Pls
3894 4226 Pls
3902 4230 Pls
3910 4204 Pls
3918 4285 Pls
3925 4203 Pls
3933 4077 Pls
3948 4382 Pls
3955 4273 Pls
3962 4385 Pls
3969 4342 Pls
3976 4244 Pls
3983 4287 Pls
3990 4070 Pls
3997 4272 Pls
4003 4296 Pls
4010 4246 Pls
4017 4168 Pls
4023 4171 Pls
4029 4393 Pls
4036 4214 Pls
4042 4248 Pls
4048 4189 Pls
4054 3996 Pls
4061 4431 Pls
4067 4358 Pls
4073 4370 Pls
4078 4400 Pls
4084 4204 Pls
4090 4295 Pls
4096 4072 Pls
4107 4252 Pls
4113 4303 Pls
4124 4239 Pls
4134 4241 Pls
4140 4409 Pls
4150 4236 Pls
4155 4349 Pls
4161 4407 Pls
4166 4265 Pls
4171 4254 Pls
4176 4333 Pls
4181 4252 Pls
4186 4382 Pls
4190 4301 Pls
4195 4256 Pls
4200 4362 Pls
4205 4432 Pls
4210 4402 Pls
4214 4371 Pls
4219 4371 Pls
4223 4154 Pls
4228 4229 Pls
4233 4428 Pls
4237 4310 Pls
4242 4178 Pls
4246 4353 Pls
4250 4248 Pls
4255 4312 Pls
4259 4225 Pls
4263 4384 Pls
4268 4420 Pls
4272 4119 Pls
4276 4308 Pls
4280 4367 Pls
4285 4453 Pls
4293 4385 Pls
4297 4490 Pls
4301 4397 Pls
4309 4389 Pls
4313 4355 Pls
4329 4213 Pls
4340 4329 Pls
4344 4305 Pls
4347 4407 Pls
4355 4338 Pls
4366 3999 Pls
4369 4369 Pls
4373 4411 Pls
4377 4358 Pls
4384 4324 Pls
4387 4339 Pls
4397 4248 Pls
4404 4319 Pls
4408 4353 Pls
4411 4372 Pls
4414 4081 Pls
4421 4222 Pls
4431 4389 Pls
4434 4001 Pls
4447 4334 Pls
4450 4236 Pls
4453 4286 Pls
4456 4264 Pls
4462 4312 Pls
4465 4336 Pls
4468 4277 Pls
4475 4258 Pls
4478 4332 Pls
4483 4370 Pls
4489 4223 Pls
4492 4229 Pls
4495 4146 Pls
4498 4178 Pls
4501 4275 Pls
4504 4284 Pls
4521 4390 Pls
4526 4286 Pls
4529 4247 Pls
4532 4220 Pls
4535 4211 Pls
4537 4205 Pls
4543 4196 Pls
4545 4351 Pls
4548 4234 Pls
4551 4362 Pls
4566 4167 Pls
4569 4308 Pls
4574 4191 Pls
4577 4268 Pls
4579 4280 Pls
4584 4285 Pls
4589 4255 Pls
4594 4281 Pls
4601 4255 Pls
4609 4209 Pls
4613 4275 Pls
4618 4245 Pls
4621 4144 Pls
4623 4267 Pls
4630 4186 Pls
4632 4129 Pls
4634 4168 Pls
4637 4126 Pls
4639 4268 Pls
4655 4216 Pls
4659 4203 Pls
4670 4212 Pls
4672 4241 Pls
4674 4225 Pls
4687 4175 Pls
4691 4270 Pls
4693 4213 Pls
4700 4214 Pls
4714 4110 Pls
4726 4139 Pls
4730 4198 Pls
4732 4207 Pls
4745 4157 Pls
4749 4020 Pls
4755 4163 Pls
4762 4080 Pls
4771 4204 Pls
4779 4129 Pls
4780 4199 Pls
4789 4073 Pls
4800 4109 Pls
4805 4146 Pls
4817 4118 Pls
4830 4024 Pls
4832 4097 Pls
4834 4051 Pls
4839 4129 Pls
4845 4088 Pls
4848 4117 Pls
4856 4109 Pls
4859 4045 Pls
4864 4059 Pls
4870 4097 Pls
4876 4095 Pls
4882 4065 Pls
4903 4049 Pls
4908 4093 Pls
4911 4041 Pls
4912 4072 Pls
4916 4066 Pls
4936 4033 Pls
4956 4065 Pls
4977 4042 Pls
4980 3910 Pls
4981 4005 Pls
4986 4001 Pls
4994 4021 Pls
4999 4006 Pls
5015 3983 Pls
5034 3908 Pls
5037 3995 Pls
5040 3977 Pls
5041 3948 Pls
5042 4006 Pls
5047 3986 Pls
5055 3977 Pls
5062 3924 Pls
5119 3893 Pls
5120 3912 Pls
5124 3916 Pls
5163 3869 Pls
5193 3820 Pls
5199 3822 Pls
5301 3745 Pls
5334 3697 Pls
5375 3682 Pls
5384 3674 Pls
5397 3627 Pls
5496 3541 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
