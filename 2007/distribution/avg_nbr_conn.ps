%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 21:13:42 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 21:13:42 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 1929 M
31 0 V
5562 0 R
-31 0 V
1210 2646 M
31 0 V
5562 0 R
-31 0 V
1210 3155 M
31 0 V
5562 0 R
-31 0 V
1210 3550 M
31 0 V
5562 0 R
-31 0 V
1210 3872 M
31 0 V
5562 0 R
-31 0 V
1210 4144 M
31 0 V
5562 0 R
-31 0 V
1210 4380 M
31 0 V
5562 0 R
-31 0 V
1210 4589 M
31 0 V
5562 0 R
-31 0 V
1210 4775 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1631 704 M
0 31 V
0 4040 R
0 -31 V
1877 704 M
0 31 V
0 4040 R
0 -31 V
2052 704 M
0 31 V
0 4040 R
0 -31 V
2187 704 M
0 31 V
0 4040 R
0 -31 V
2298 704 M
0 31 V
0 4040 R
0 -31 V
2392 704 M
0 31 V
0 4040 R
0 -31 V
2473 704 M
0 31 V
0 4040 R
0 -31 V
2544 704 M
0 31 V
0 4040 R
0 -31 V
2608 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2608 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3029 704 M
0 31 V
0 4040 R
0 -31 V
3275 704 M
0 31 V
0 4040 R
0 -31 V
3450 704 M
0 31 V
0 4040 R
0 -31 V
3586 704 M
0 31 V
0 4040 R
0 -31 V
3696 704 M
0 31 V
0 4040 R
0 -31 V
3790 704 M
0 31 V
0 4040 R
0 -31 V
3871 704 M
0 31 V
0 4040 R
0 -31 V
3943 704 M
0 31 V
0 4040 R
0 -31 V
4007 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4007 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4427 704 M
0 31 V
0 4040 R
0 -31 V
4674 704 M
0 31 V
0 4040 R
0 -31 V
4848 704 M
0 31 V
0 4040 R
0 -31 V
4984 704 M
0 31 V
0 4040 R
0 -31 V
5095 704 M
0 31 V
0 4040 R
0 -31 V
5188 704 M
0 31 V
0 4040 R
0 -31 V
5269 704 M
0 31 V
0 4040 R
0 -31 V
5341 704 M
0 31 V
0 4040 R
0 -31 V
5405 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5405 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5826 704 M
0 31 V
0 4040 R
0 -31 V
6072 704 M
0 31 V
0 4040 R
0 -31 V
6247 704 M
0 31 V
0 4040 R
0 -31 V
6382 704 M
0 31 V
0 4040 R
0 -31 V
6493 704 M
0 31 V
0 4040 R
0 -31 V
6586 704 M
0 31 V
0 4040 R
0 -31 V
6667 704 M
0 31 V
0 4040 R
0 -31 V
6739 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4006 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1210 1799 M
1631 895 L
246 273 V
175 -102 V
2187 944 L
111 496 V
94 -20 V
81 335 V
71 -64 V
64 -217 V
58 348 V
53 208 V
49 -219 V
45 143 V
41 323 V
40 -124 V
36 -58 V
35 559 V
33 -211 V
31 -134 V
30 137 V
28 119 V
27 -27 V
26 210 V
25 147 V
23 96 V
23 -21 V
22 37 V
22 -488 V
20 590 V
20 -5 V
20 70 V
18 148 V
18 174 V
18 -36 V
17 -428 V
17 444 V
16 -110 V
16 268 V
15 -261 V
15 -247 V
15 127 V
14 426 V
14 -379 V
14 312 V
13 -73 V
13 406 V
13 -328 V
12 535 V
13 -456 V
12 -60 V
11 1 V
12 102 V
11 -190 V
11 -132 V
11 274 V
11 -100 V
11 126 V
10 14 V
10 -201 V
10 144 V
10 370 V
10 53 V
9 -479 V
10 484 V
9 -220 V
9 42 V
9 -506 V
9 204 V
9 85 V
9 90 V
8 -85 V
8 1 V
9 132 V
8 -144 V
8 361 V
8 -150 V
8 -143 V
7 203 V
8 -217 V
8 -231 V
7 137 V
7 -92 V
8 409 V
7 -85 V
7 79 V
7 -781 V
7 674 V
7 278 V
7 -503 V
6 650 V
7 -892 V
6 378 V
7 -84 V
6 236 V
7 135 V
6 118 V
6 -383 V
6 146 V
7 82 V
6 -25 V
6 260 V
5 -384 V
6 26 V
6 -283 V
6 -216 V
6 742 V
5 -511 V
6 -61 V
stroke 4059 3574 M
5 554 V
6 73 V
5 -229 V
6 -65 V
5 -291 V
5 218 V
6 -97 V
5 251 V
5 195 V
5 1 V
10 -906 V
5 640 V
10 -44 V
5 186 V
5 149 V
5 -254 V
4 168 V
10 -356 V
9 -104 V
5 268 V
13 26 V
5 226 V
4 -194 V
4 -113 V
5 63 V
4 153 V
4 -734 V
9 137 V
4 462 V
4 -18 V
4 -150 V
5 310 V
8 -881 V
8 720 V
4 116 V
4 -28 V
4 -126 V
4 179 V
3 -406 V
4 41 V
4 327 V
4 221 V
4 -374 V
3 -339 V
4 483 V
4 186 V
4 -206 V
7 -96 V
4 102 V
3 -163 V
4 219 V
7 14 V
14 97 V
3 -129 V
4 -342 V
3 395 V
3 -127 V
4 104 V
6 -556 V
7 610 V
3 -218 V
4 -445 V
3 351 V
3 166 V
6 -35 V
7 -289 V
9 177 V
3 -6 V
3 134 V
3 -9 V
3 106 V
3 21 V
12 -139 V
3 45 V
3 -243 V
3 29 V
9 -110 V
3 239 V
3 -126 V
3 139 V
2 -105 V
3 178 V
6 -593 V
5 531 V
6 -111 V
8 93 V
3 -3 V
10 -666 V
3 655 V
3 -147 V
2 56 V
3 210 V
2 -61 V
3 -138 V
15 95 V
8 -4 V
9 0 V
3 -291 V
2 307 V
10 -317 V
2 379 V
17 -292 V
11 100 V
2 -150 V
stroke 4607 3653 M
3 207 V
2 -105 V
7 106 V
2 -46 V
2 -7 V
2 -321 V
5 324 V
4 -118 V
11 152 V
6 -212 V
4 53 V
2 135 V
2 29 V
4 -114 V
7 -170 V
4 137 V
18 -74 V
2 29 V
7 84 V
4 -44 V
4 18 V
2 -287 V
24 168 V
6 137 V
1 -188 V
4 -5 V
20 29 V
13 0 V
7 23 V
13 -11 V
7 -66 V
8 -94 V
2 128 V
26 -47 V
6 21 V
3 -125 V
2 1 V
3 154 V
16 -38 V
5 -8 V
7 -20 V
3 30 V
1 -2 V
3 -67 V
8 40 V
4 -77 V
16 -45 V
13 75 V
10 -103 V
6 34 V
2 2 V
23 -241 V
5 286 V
1 -38 V
1 -34 V
6 -19 V
10 -26 V
3 -5 V
6 1 V
12 -80 V
20 84 V
12 -10 V
4 -174 V
15 83 V
3 52 V
24 -42 V
7 -94 V
9 -3 V
7 -31 V
24 -49 V
46 -88 V
10 -9 V
124 -167 V
22 -97 V
24 4 V
4 -65 V
27 21 V
99 -237 V
1210 1799 Pls
1631 895 Pls
1877 1168 Pls
2052 1066 Pls
2187 944 Pls
2298 1440 Pls
2392 1420 Pls
2473 1755 Pls
2544 1691 Pls
2608 1474 Pls
2666 1822 Pls
2719 2030 Pls
2768 1811 Pls
2813 1954 Pls
2854 2277 Pls
2894 2153 Pls
2930 2095 Pls
2965 2654 Pls
2998 2443 Pls
3029 2309 Pls
3059 2446 Pls
3087 2565 Pls
3114 2538 Pls
3140 2748 Pls
3165 2895 Pls
3188 2991 Pls
3211 2970 Pls
3233 3007 Pls
3255 2519 Pls
3275 3109 Pls
3295 3104 Pls
3315 3174 Pls
3333 3322 Pls
3351 3496 Pls
3369 3460 Pls
3386 3032 Pls
3403 3476 Pls
3419 3366 Pls
3435 3634 Pls
3450 3373 Pls
3465 3126 Pls
3480 3253 Pls
3494 3679 Pls
3508 3300 Pls
3522 3612 Pls
3535 3539 Pls
3548 3945 Pls
3561 3617 Pls
3573 4152 Pls
3586 3696 Pls
3598 3636 Pls
3609 3637 Pls
3621 3739 Pls
3632 3549 Pls
3643 3417 Pls
3654 3691 Pls
3665 3591 Pls
3676 3717 Pls
3686 3731 Pls
3696 3530 Pls
3706 3674 Pls
3716 4044 Pls
3726 4097 Pls
3735 3618 Pls
3745 4102 Pls
3754 3882 Pls
3763 3924 Pls
3772 3418 Pls
3781 3622 Pls
3790 3707 Pls
3799 3797 Pls
3807 3712 Pls
3815 3713 Pls
3824 3845 Pls
3832 3701 Pls
3840 4062 Pls
3848 3912 Pls
3856 3769 Pls
3863 3972 Pls
3871 3755 Pls
3879 3524 Pls
3886 3661 Pls
3893 3569 Pls
3901 3978 Pls
3908 3893 Pls
3915 3972 Pls
3922 3191 Pls
3929 3865 Pls
3936 4143 Pls
3943 3640 Pls
3949 4290 Pls
3956 3398 Pls
3962 3776 Pls
3969 3692 Pls
3975 3928 Pls
3982 4063 Pls
3988 4181 Pls
3994 3798 Pls
4000 3944 Pls
4007 4026 Pls
4013 4001 Pls
4019 4261 Pls
4024 3877 Pls
4030 3903 Pls
4036 3620 Pls
4042 3404 Pls
4048 4146 Pls
4053 3635 Pls
4059 3574 Pls
4064 4128 Pls
4070 4201 Pls
4075 3972 Pls
4081 3907 Pls
4086 3616 Pls
4091 3834 Pls
4097 3737 Pls
4102 3988 Pls
4107 4183 Pls
4112 4184 Pls
4122 3278 Pls
4127 3918 Pls
4137 3874 Pls
4142 4060 Pls
4147 4209 Pls
4152 3955 Pls
4156 4123 Pls
4166 3767 Pls
4175 3663 Pls
4180 3931 Pls
4193 3957 Pls
4198 4183 Pls
4202 3989 Pls
4206 3876 Pls
4211 3939 Pls
4215 4092 Pls
4219 3358 Pls
4228 3495 Pls
4232 3957 Pls
4236 3939 Pls
4240 3789 Pls
4245 4099 Pls
4253 3218 Pls
4261 3938 Pls
4265 4054 Pls
4269 4026 Pls
4273 3900 Pls
4277 4079 Pls
4280 3673 Pls
4284 3714 Pls
4288 4041 Pls
4292 4262 Pls
4296 3888 Pls
4299 3549 Pls
4303 4032 Pls
4307 4218 Pls
4311 4012 Pls
4318 3916 Pls
4322 4018 Pls
4325 3855 Pls
4329 4074 Pls
4336 4088 Pls
4350 4185 Pls
4353 4056 Pls
4357 3714 Pls
4360 4109 Pls
4363 3982 Pls
4367 4086 Pls
4373 3530 Pls
4380 4140 Pls
4383 3922 Pls
4387 3477 Pls
4390 3828 Pls
4393 3994 Pls
4399 3959 Pls
4406 3670 Pls
4415 3847 Pls
4418 3841 Pls
4421 3975 Pls
4424 3966 Pls
4427 4072 Pls
4430 4093 Pls
4442 3954 Pls
4445 3999 Pls
4448 3756 Pls
4451 3785 Pls
4460 3675 Pls
4463 3914 Pls
4466 3788 Pls
4469 3927 Pls
4471 3822 Pls
4474 4000 Pls
4480 3407 Pls
4485 3938 Pls
4491 3827 Pls
4499 3920 Pls
4502 3917 Pls
4512 3251 Pls
4515 3906 Pls
4518 3759 Pls
4520 3815 Pls
4523 4025 Pls
4525 3964 Pls
4528 3826 Pls
4543 3921 Pls
4551 3917 Pls
4560 3917 Pls
4563 3626 Pls
4565 3933 Pls
4575 3616 Pls
4577 3995 Pls
4594 3703 Pls
4605 3803 Pls
4607 3653 Pls
4610 3860 Pls
4612 3755 Pls
4619 3861 Pls
4621 3815 Pls
4623 3808 Pls
4625 3487 Pls
4630 3811 Pls
4634 3693 Pls
4645 3845 Pls
4651 3633 Pls
4655 3686 Pls
4657 3821 Pls
4659 3850 Pls
4663 3736 Pls
4670 3566 Pls
4674 3703 Pls
4692 3629 Pls
4694 3658 Pls
4701 3742 Pls
4705 3698 Pls
4709 3716 Pls
4711 3429 Pls
4735 3597 Pls
4741 3734 Pls
4742 3546 Pls
4746 3541 Pls
4766 3570 Pls
4779 3570 Pls
4786 3593 Pls
4799 3582 Pls
4806 3516 Pls
4814 3422 Pls
4816 3550 Pls
4842 3503 Pls
4848 3524 Pls
4851 3399 Pls
4853 3400 Pls
4856 3554 Pls
4872 3516 Pls
4877 3508 Pls
4884 3488 Pls
4887 3518 Pls
4888 3516 Pls
4891 3449 Pls
4899 3489 Pls
4903 3412 Pls
4919 3367 Pls
4932 3442 Pls
4942 3339 Pls
4948 3373 Pls
4950 3375 Pls
4973 3134 Pls
4978 3420 Pls
4979 3382 Pls
4980 3348 Pls
4986 3329 Pls
4996 3303 Pls
4999 3298 Pls
5005 3299 Pls
5017 3219 Pls
5037 3303 Pls
5049 3293 Pls
5053 3119 Pls
5068 3202 Pls
5071 3254 Pls
5095 3212 Pls
5102 3118 Pls
5111 3115 Pls
5118 3084 Pls
5142 3035 Pls
5188 2947 Pls
5198 2938 Pls
5322 2771 Pls
5344 2674 Pls
5368 2678 Pls
5372 2613 Pls
5399 2634 Pls
5498 2397 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
