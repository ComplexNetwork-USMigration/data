%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 21:08:38 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 21:08:38 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 1929 M
31 0 V
5562 0 R
-31 0 V
1210 2646 M
31 0 V
5562 0 R
-31 0 V
1210 3155 M
31 0 V
5562 0 R
-31 0 V
1210 3550 M
31 0 V
5562 0 R
-31 0 V
1210 3872 M
31 0 V
5562 0 R
-31 0 V
1210 4144 M
31 0 V
5562 0 R
-31 0 V
1210 4380 M
31 0 V
5562 0 R
-31 0 V
1210 4589 M
31 0 V
5562 0 R
-31 0 V
1210 4775 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1631 704 M
0 31 V
0 4040 R
0 -31 V
1877 704 M
0 31 V
0 4040 R
0 -31 V
2052 704 M
0 31 V
0 4040 R
0 -31 V
2187 704 M
0 31 V
0 4040 R
0 -31 V
2298 704 M
0 31 V
0 4040 R
0 -31 V
2392 704 M
0 31 V
0 4040 R
0 -31 V
2473 704 M
0 31 V
0 4040 R
0 -31 V
2544 704 M
0 31 V
0 4040 R
0 -31 V
2608 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2608 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3029 704 M
0 31 V
0 4040 R
0 -31 V
3275 704 M
0 31 V
0 4040 R
0 -31 V
3450 704 M
0 31 V
0 4040 R
0 -31 V
3586 704 M
0 31 V
0 4040 R
0 -31 V
3696 704 M
0 31 V
0 4040 R
0 -31 V
3790 704 M
0 31 V
0 4040 R
0 -31 V
3871 704 M
0 31 V
0 4040 R
0 -31 V
3943 704 M
0 31 V
0 4040 R
0 -31 V
4007 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4007 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4427 704 M
0 31 V
0 4040 R
0 -31 V
4674 704 M
0 31 V
0 4040 R
0 -31 V
4848 704 M
0 31 V
0 4040 R
0 -31 V
4984 704 M
0 31 V
0 4040 R
0 -31 V
5095 704 M
0 31 V
0 4040 R
0 -31 V
5188 704 M
0 31 V
0 4040 R
0 -31 V
5269 704 M
0 31 V
0 4040 R
0 -31 V
5341 704 M
0 31 V
0 4040 R
0 -31 V
5405 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5405 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5826 704 M
0 31 V
0 4040 R
0 -31 V
6072 704 M
0 31 V
0 4040 R
0 -31 V
6247 704 M
0 31 V
0 4040 R
0 -31 V
6382 704 M
0 31 V
0 4040 R
0 -31 V
6493 704 M
0 31 V
0 4040 R
0 -31 V
6586 704 M
0 31 V
0 4040 R
0 -31 V
6667 704 M
0 31 V
0 4040 R
0 -31 V
6739 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4006 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1210 1460 M
1631 712 L
246 265 V
175 36 V
135 483 V
111 -211 V
94 -6 V
81 278 V
71 268 V
64 -353 V
58 416 V
53 136 V
49 -27 V
45 71 V
41 271 V
40 29 V
36 79 V
35 4 V
33 -231 V
31 317 V
30 -97 V
28 379 V
27 -58 V
26 124 V
25 -70 V
23 -154 V
23 186 V
22 -50 V
22 287 V
20 -86 V
20 -125 V
20 419 V
18 -291 V
18 89 V
18 309 V
17 -78 V
17 242 V
16 -163 V
16 -397 V
15 532 V
15 -161 V
15 55 V
14 48 V
14 -216 V
14 638 V
13 -560 V
13 252 V
13 -146 V
12 368 V
13 142 V
12 -501 V
11 -399 V
12 527 V
11 127 V
11 -495 V
11 822 V
11 -139 V
11 -503 V
10 117 V
10 8 V
10 -179 V
10 -89 V
10 759 V
9 -232 V
10 -97 V
9 -118 V
9 243 V
9 -684 V
9 623 V
9 -350 V
9 612 V
8 186 V
8 -335 V
9 -182 V
8 332 V
8 -328 V
8 107 V
8 142 V
7 -375 V
16 -210 V
7 562 V
7 11 V
8 4 V
7 -58 V
7 -301 V
7 274 V
7 -259 V
7 86 V
7 -89 V
6 124 V
7 350 V
6 -394 V
7 -101 V
6 494 V
13 -143 V
6 -69 V
6 -375 V
7 595 V
6 -354 V
6 -33 V
5 -293 V
6 519 V
6 -261 V
6 517 V
6 -448 V
5 102 V
stroke 4053 3804 M
6 57 V
5 95 V
6 -41 V
5 156 V
11 -127 V
5 -141 V
6 -222 V
10 241 V
5 145 V
5 94 V
5 -298 V
10 38 V
5 118 V
5 -306 V
5 205 V
5 128 V
9 287 V
5 -104 V
4 -198 V
19 -110 V
9 363 V
4 -237 V
9 328 V
4 -703 V
4 -35 V
5 163 V
8 403 V
8 -341 V
5 412 V
4 -354 V
4 34 V
4 42 V
4 325 V
4 -290 V
4 31 V
8 -253 V
3 105 V
4 68 V
8 -10 V
4 322 V
3 -246 V
8 -192 V
15 186 V
3 -94 V
7 143 V
4 -246 V
7 -103 V
7 252 V
3 -236 V
4 297 V
3 -36 V
3 -141 V
4 -333 V
6 118 V
7 327 V
7 -445 V
6 526 V
10 -173 V
6 121 V
6 -178 V
6 155 V
3 161 V
3 -683 V
3 613 V
3 -204 V
3 -79 V
3 -21 V
3 -50 V
3 -245 V
3 160 V
6 131 V
3 -155 V
3 389 V
3 -27 V
6 21 V
11 -9 V
3 -468 V
2 122 V
6 75 V
3 -54 V
2 287 V
8 70 V
6 11 V
2 -329 V
3 254 V
8 -171 V
7 87 V
11 125 V
7 -281 V
3 -111 V
2 223 V
5 92 V
2 67 V
5 -85 V
15 20 V
2 -304 V
7 -39 V
5 -76 V
2 77 V
2 285 V
5 53 V
7 -42 V
4 4 V
5 -85 V
stroke 4619 3705 M
6 -40 V
5 45 V
6 -52 V
2 111 V
4 -58 V
7 -72 V
2 89 V
8 -47 V
6 -149 V
3 48 V
4 15 V
2 -114 V
2 210 V
4 -216 V
4 231 V
10 -59 V
13 -156 V
2 131 V
13 -338 V
4 240 V
13 39 V
2 40 V
25 67 V
8 -164 V
10 -42 V
14 129 V
3 -176 V
5 39 V
14 -26 V
4 37 V
1 11 V
5 -219 V
9 242 V
8 -136 V
1 113 V
6 -115 V
11 51 V
7 -47 V
7 79 V
2 -63 V
7 38 V
1 -42 V
7 -76 V
5 -6 V
1 -30 V
6 61 V
2 67 V
3 -46 V
4 -9 V
23 -25 V
10 -57 V
8 -53 V
2 -34 V
4 115 V
6 8 V
15 -224 V
21 122 V
5 -43 V
1 -29 V
7 122 V
15 3 V
28 -55 V
13 -53 V
4 -75 V
5 13 V
1 -60 V
76 -125 V
37 -83 V
25 57 V
103 -217 V
9 -64 V
13 44 V
12 -29 V
123 -261 V
1210 1460 Pls
1631 712 Pls
1877 977 Pls
2052 1013 Pls
2187 1496 Pls
2298 1285 Pls
2392 1279 Pls
2473 1557 Pls
2544 1825 Pls
2608 1472 Pls
2666 1888 Pls
2719 2024 Pls
2768 1997 Pls
2813 2068 Pls
2854 2339 Pls
2894 2368 Pls
2930 2447 Pls
2965 2451 Pls
2998 2220 Pls
3029 2537 Pls
3059 2440 Pls
3087 2819 Pls
3114 2761 Pls
3140 2885 Pls
3165 2815 Pls
3188 2661 Pls
3211 2847 Pls
3233 2797 Pls
3255 3084 Pls
3275 2998 Pls
3295 2873 Pls
3315 3292 Pls
3333 3001 Pls
3351 3090 Pls
3369 3399 Pls
3386 3321 Pls
3403 3563 Pls
3419 3400 Pls
3435 3003 Pls
3450 3535 Pls
3465 3374 Pls
3480 3429 Pls
3494 3477 Pls
3508 3261 Pls
3522 3899 Pls
3535 3339 Pls
3548 3591 Pls
3561 3445 Pls
3573 3813 Pls
3586 3955 Pls
3598 3454 Pls
3609 3055 Pls
3621 3582 Pls
3632 3709 Pls
3643 3214 Pls
3654 4036 Pls
3665 3897 Pls
3676 3394 Pls
3686 3511 Pls
3696 3519 Pls
3706 3340 Pls
3716 3251 Pls
3726 4010 Pls
3735 3778 Pls
3745 3681 Pls
3754 3563 Pls
3763 3806 Pls
3772 3122 Pls
3781 3745 Pls
3790 3395 Pls
3799 4007 Pls
3807 4193 Pls
3815 3858 Pls
3824 3676 Pls
3832 4008 Pls
3840 3680 Pls
3848 3787 Pls
3856 3929 Pls
3863 3554 Pls
3879 3344 Pls
3886 3906 Pls
3893 3917 Pls
3901 3921 Pls
3908 3863 Pls
3915 3562 Pls
3922 3836 Pls
3929 3577 Pls
3936 3663 Pls
3943 3574 Pls
3949 3698 Pls
3956 4048 Pls
3962 3654 Pls
3969 3553 Pls
3975 4047 Pls
3988 3904 Pls
3994 3835 Pls
4000 3460 Pls
4007 4055 Pls
4013 3701 Pls
4019 3668 Pls
4024 3375 Pls
4030 3894 Pls
4036 3633 Pls
4042 4150 Pls
4048 3702 Pls
4053 3804 Pls
4059 3861 Pls
4064 3956 Pls
4070 3915 Pls
4075 4071 Pls
4086 3944 Pls
4091 3803 Pls
4097 3581 Pls
4107 3822 Pls
4112 3967 Pls
4117 4061 Pls
4122 3763 Pls
4132 3801 Pls
4137 3919 Pls
4142 3613 Pls
4147 3818 Pls
4152 3946 Pls
4161 4233 Pls
4166 4129 Pls
4170 3931 Pls
4189 3821 Pls
4198 4184 Pls
4202 3947 Pls
4211 4275 Pls
4215 3572 Pls
4219 3537 Pls
4224 3700 Pls
4232 4103 Pls
4240 3762 Pls
4245 4174 Pls
4249 3820 Pls
4253 3854 Pls
4257 3896 Pls
4261 4221 Pls
4265 3931 Pls
4269 3962 Pls
4277 3709 Pls
4280 3814 Pls
4284 3882 Pls
4292 3872 Pls
4296 4194 Pls
4299 3948 Pls
4307 3756 Pls
4322 3942 Pls
4325 3848 Pls
4332 3991 Pls
4336 3745 Pls
4343 3642 Pls
4350 3894 Pls
4353 3658 Pls
4357 3955 Pls
4360 3919 Pls
4363 3778 Pls
4367 3445 Pls
4373 3563 Pls
4380 3890 Pls
4387 3445 Pls
4393 3971 Pls
4403 3798 Pls
4409 3919 Pls
4415 3741 Pls
4421 3896 Pls
4424 4057 Pls
4427 3374 Pls
4430 3987 Pls
4433 3783 Pls
4436 3704 Pls
4439 3683 Pls
4442 3633 Pls
4445 3388 Pls
4448 3548 Pls
4454 3679 Pls
4457 3524 Pls
4460 3913 Pls
4463 3886 Pls
4469 3907 Pls
4480 3898 Pls
4483 3430 Pls
4485 3552 Pls
4491 3627 Pls
4494 3573 Pls
4496 3860 Pls
4504 3930 Pls
4510 3941 Pls
4512 3612 Pls
4515 3866 Pls
4523 3695 Pls
4530 3782 Pls
4541 3907 Pls
4548 3626 Pls
4551 3515 Pls
4553 3738 Pls
4558 3830 Pls
4560 3897 Pls
4565 3812 Pls
4580 3832 Pls
4582 3528 Pls
4589 3489 Pls
4594 3413 Pls
4596 3490 Pls
4598 3775 Pls
4603 3828 Pls
4610 3786 Pls
4614 3790 Pls
4619 3705 Pls
4625 3665 Pls
4630 3710 Pls
4636 3658 Pls
4638 3769 Pls
4642 3711 Pls
4649 3639 Pls
4651 3728 Pls
4659 3681 Pls
4665 3532 Pls
4668 3580 Pls
4672 3595 Pls
4674 3481 Pls
4676 3691 Pls
4680 3475 Pls
4684 3706 Pls
4694 3647 Pls
4707 3491 Pls
4709 3622 Pls
4722 3284 Pls
4726 3524 Pls
4739 3563 Pls
4741 3603 Pls
4766 3670 Pls
4774 3506 Pls
4784 3464 Pls
4798 3593 Pls
4801 3417 Pls
4806 3456 Pls
4820 3430 Pls
4824 3467 Pls
4825 3478 Pls
4830 3259 Pls
4839 3501 Pls
4847 3365 Pls
4848 3478 Pls
4854 3363 Pls
4865 3414 Pls
4872 3367 Pls
4879 3446 Pls
4881 3383 Pls
4888 3421 Pls
4889 3379 Pls
4896 3303 Pls
4901 3297 Pls
4902 3267 Pls
4908 3328 Pls
4910 3395 Pls
4913 3349 Pls
4917 3340 Pls
4940 3315 Pls
4950 3258 Pls
4958 3205 Pls
4960 3171 Pls
4964 3286 Pls
4970 3294 Pls
4985 3070 Pls
5006 3192 Pls
5011 3149 Pls
5012 3120 Pls
5019 3242 Pls
5034 3245 Pls
5062 3190 Pls
5075 3137 Pls
5079 3062 Pls
5084 3075 Pls
5085 3015 Pls
5161 2890 Pls
5198 2807 Pls
5223 2864 Pls
5326 2647 Pls
5335 2583 Pls
5348 2627 Pls
5360 2598 Pls
5483 2337 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
