%!PS-Adobe-2.0 EPSF-2.0
%%Title: clus_coeff.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 16:37:50 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clus_coeff.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 16:37:50 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 1317 M
31 0 V
5562 0 R
-31 0 V
1210 1675 M
31 0 V
5562 0 R
-31 0 V
1210 1929 M
31 0 V
5562 0 R
-31 0 V
1210 2127 M
31 0 V
5562 0 R
-31 0 V
1210 2288 M
31 0 V
5562 0 R
-31 0 V
1210 2424 M
31 0 V
5562 0 R
-31 0 V
1210 2542 M
31 0 V
5562 0 R
-31 0 V
1210 2646 M
31 0 V
5562 0 R
-31 0 V
-5562 94 R
63 0 V
5530 0 R
-63 0 V
stroke
1078 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 3352 M
31 0 V
5562 0 R
-31 0 V
1210 3711 M
31 0 V
5562 0 R
-31 0 V
1210 3965 M
31 0 V
5562 0 R
-31 0 V
1210 4162 M
31 0 V
5562 0 R
-31 0 V
1210 4323 M
31 0 V
5562 0 R
-31 0 V
1210 4460 M
31 0 V
5562 0 R
-31 0 V
1210 4578 M
31 0 V
5562 0 R
-31 0 V
1210 4682 M
31 0 V
5562 0 R
-31 0 V
-5562 93 R
63 0 V
5530 0 R
-63 0 V
stroke
1078 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1771 704 M
0 31 V
0 4040 R
0 -31 V
2100 704 M
0 31 V
0 4040 R
0 -31 V
2332 704 M
0 31 V
0 4040 R
0 -31 V
2513 704 M
0 31 V
0 4040 R
0 -31 V
2661 704 M
0 31 V
0 4040 R
0 -31 V
2786 704 M
0 31 V
0 4040 R
0 -31 V
2894 704 M
0 31 V
0 4040 R
0 -31 V
2989 704 M
0 31 V
0 4040 R
0 -31 V
3074 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3074 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3636 704 M
0 31 V
0 4040 R
0 -31 V
3964 704 M
0 31 V
0 4040 R
0 -31 V
4197 704 M
0 31 V
0 4040 R
0 -31 V
4377 704 M
0 31 V
0 4040 R
0 -31 V
4525 704 M
0 31 V
0 4040 R
0 -31 V
4650 704 M
0 31 V
0 4040 R
0 -31 V
4758 704 M
0 31 V
0 4040 R
0 -31 V
4853 704 M
0 31 V
0 4040 R
0 -31 V
4939 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4939 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5500 704 M
0 31 V
0 4040 R
0 -31 V
5828 704 M
0 31 V
0 4040 R
0 -31 V
6061 704 M
0 31 V
0 4040 R
0 -31 V
6242 704 M
0 31 V
0 4040 R
0 -31 V
6389 704 M
0 31 V
0 4040 R
0 -31 V
6514 704 M
0 31 V
0 4040 R
0 -31 V
6622 704 M
0 31 V
0 4040 R
0 -31 V
6718 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Cluster Coefficient)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4006 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Observed Value)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1771 704 M
0 1603 V
329 2184 V
232 -15 V
181 -152 V
148 94 V
125 -56 V
108 -2 V
95 -23 V
85 49 V
78 -39 V
70 -21 V
65 7 V
60 69 V
56 -47 V
52 -49 V
49 20 V
46 71 V
44 -82 V
42 0 V
39 -44 V
38 116 V
36 -34 V
34 -55 V
33 11 V
32 -43 V
31 -11 V
29 103 V
28 101 V
28 -170 V
26 49 V
26 -20 V
25 75 V
24 -195 V
24 100 V
22 -104 V
23 -40 V
21 52 V
21 58 V
21 -94 V
20 153 V
19 84 V
19 -383 V
19 244 V
18 -174 V
18 102 V
17 69 V
17 79 V
17 48 V
16 -235 V
16 -19 V
16 120 V
16 -61 V
15 224 V
15 -121 V
14 74 V
15 -602 V
14 568 V
13 -117 V
14 -114 V
13 12 V
14 -91 V
13 -25 V
25 166 V
12 22 V
12 286 V
12 -195 V
12 -435 V
12 577 V
11 -218 V
12 -46 V
11 125 V
11 -211 V
11 48 V
10 -83 V
11 356 V
10 -194 V
11 105 V
20 -331 V
20 174 V
9 150 V
10 181 V
10 -65 V
18 -217 V
9 53 V
18 -39 V
9 264 V
9 -77 V
9 -235 V
8 142 V
9 167 V
8 -267 V
8 -57 V
9 -114 V
32 39 V
7 472 V
8 -800 V
15 492 V
8 -299 V
7 493 V
8 -340 V
7 350 V
7 29 V
stroke 5030 4473 M
8 -42 V
7 -171 V
7 61 V
7 270 V
7 -487 V
7 142 V
7 242 V
6 -311 V
14 -44 V
6 150 V
7 71 V
6 -127 V
7 273 V
6 -230 V
13 7 V
6 -57 V
12 251 V
13 -380 V
6 -196 V
6 373 V
11 194 V
6 -669 V
18 499 V
5 205 V
6 -371 V
6 -467 V
5 460 V
11 146 V
6 -55 V
5 -163 V
5 235 V
6 152 V
5 -124 V
11 -75 V
5 -276 V
5 486 V
10 -41 V
5 -503 V
5 197 V
5 -147 V
5 8 V
25 -423 V
5 705 V
14 60 V
4 -63 V
5 -48 V
5 112 V
4 -92 V
10 -270 V
9 -71 V
4 477 V
5 -32 V
4 -2 V
4 15 V
9 -73 V
9 -179 V
4 26 V
4 185 V
21 -214 V
9 -82 V
4 -64 V
8 3 V
4 262 V
4 40 V
12 -52 V
8 -100 V
4 243 V
7 -219 V
8 -72 V
4 293 V
4 78 V
3 -651 V
8 236 V
7 312 V
11 18 V
4 -101 V
7 -18 V
4 -28 V
3 -195 V
8 277 V
14 -247 V
6 185 V
4 -85 V
17 -253 V
3 320 V
7 -362 V
3 68 V
29 100 V
10 163 V
16 -136 V
3 124 V
12 65 V
15 -315 V
6 217 V
6 -304 V
6 337 V
2 -199 V
3 50 V
34 -65 V
17 27 V
2 21 V
27 -112 V
5 -9 V
13 -78 V
stroke 5870 3764 M
25 98 V
8 129 V
10 25 V
7 47 V
10 -167 V
4 11 V
26 14 V
2 106 V
2 -31 V
23 -230 V
7 -49 V
4 -15 V
7 130 V
8 105 V
9 -173 V
43 128 V
2 -94 V
28 -140 V
15 107 V
15 125 V
8 -78 V
14 -74 V
2 89 V
9 -79 V
6 47 V
3 -199 V
6 -79 V
20 171 V
9 48 V
10 -166 V
35 -37 V
19 64 V
44 -230 V
12 92 V
24 -82 V
6 -50 V
108 -48 V
94 -152 V
15 8 V
18 35 V
49 -169 V
17 84 V
117 -258 V
1771 2307 Pls
2100 4491 Pls
2332 4476 Pls
2513 4324 Pls
2661 4418 Pls
2786 4362 Pls
2894 4360 Pls
2989 4337 Pls
3074 4386 Pls
3152 4347 Pls
3222 4326 Pls
3287 4333 Pls
3347 4402 Pls
3403 4355 Pls
3455 4306 Pls
3504 4326 Pls
3550 4397 Pls
3594 4315 Pls
3636 4315 Pls
3675 4271 Pls
3713 4387 Pls
3749 4353 Pls
3783 4298 Pls
3816 4309 Pls
3848 4266 Pls
3879 4255 Pls
3908 4358 Pls
3936 4459 Pls
3964 4289 Pls
3990 4338 Pls
4016 4318 Pls
4041 4393 Pls
4065 4198 Pls
4089 4298 Pls
4111 4194 Pls
4134 4154 Pls
4155 4206 Pls
4176 4264 Pls
4197 4170 Pls
4217 4323 Pls
4236 4407 Pls
4255 4024 Pls
4274 4268 Pls
4292 4094 Pls
4310 4196 Pls
4327 4265 Pls
4344 4344 Pls
4361 4392 Pls
4377 4157 Pls
4393 4138 Pls
4409 4258 Pls
4425 4197 Pls
4440 4421 Pls
4455 4300 Pls
4469 4374 Pls
4484 3772 Pls
4498 4340 Pls
4511 4223 Pls
4525 4109 Pls
4538 4121 Pls
4552 4030 Pls
4565 4005 Pls
4590 4171 Pls
4602 4193 Pls
4614 4479 Pls
4626 4284 Pls
4638 3849 Pls
4650 4426 Pls
4661 4208 Pls
4673 4162 Pls
4684 4287 Pls
4695 4076 Pls
4706 4124 Pls
4716 4041 Pls
4727 4397 Pls
4737 4203 Pls
4748 4308 Pls
4768 3977 Pls
4788 4151 Pls
4797 4301 Pls
4807 4482 Pls
4817 4417 Pls
4835 4200 Pls
4844 4253 Pls
4862 4214 Pls
4871 4478 Pls
4880 4401 Pls
4889 4166 Pls
4897 4308 Pls
4906 4475 Pls
4914 4208 Pls
4922 4151 Pls
4931 4037 Pls
4963 4076 Pls
4970 4548 Pls
4978 3748 Pls
4993 4240 Pls
5001 3941 Pls
5008 4434 Pls
5016 4094 Pls
5023 4444 Pls
5030 4473 Pls
5038 4431 Pls
5045 4260 Pls
5052 4321 Pls
5059 4591 Pls
5066 4104 Pls
5073 4246 Pls
5080 4488 Pls
5086 4177 Pls
5100 4133 Pls
5106 4283 Pls
5113 4354 Pls
5119 4227 Pls
5126 4500 Pls
5132 4270 Pls
5145 4277 Pls
5151 4220 Pls
5163 4471 Pls
5176 4091 Pls
5182 3895 Pls
5188 4268 Pls
5199 4462 Pls
5205 3793 Pls
5223 4292 Pls
5228 4497 Pls
5234 4126 Pls
5240 3659 Pls
5245 4119 Pls
5256 4265 Pls
5262 4210 Pls
5267 4047 Pls
5272 4282 Pls
5278 4434 Pls
5283 4310 Pls
5294 4235 Pls
5299 3959 Pls
5304 4445 Pls
5314 4404 Pls
5319 3901 Pls
5324 4098 Pls
5329 3951 Pls
5334 3959 Pls
5359 3536 Pls
5364 4241 Pls
5378 4301 Pls
5382 4238 Pls
5387 4190 Pls
5392 4302 Pls
5396 4210 Pls
5406 3940 Pls
5415 3869 Pls
5419 4346 Pls
5424 4314 Pls
5428 4312 Pls
5432 4327 Pls
5441 4254 Pls
5450 4075 Pls
5454 4101 Pls
5458 4286 Pls
5479 4072 Pls
5488 3990 Pls
5492 3926 Pls
5500 3929 Pls
5504 4191 Pls
5508 4231 Pls
5520 4179 Pls
5528 4079 Pls
5532 4322 Pls
5539 4103 Pls
5547 4031 Pls
5551 4324 Pls
5555 4402 Pls
5558 3751 Pls
5566 3987 Pls
5573 4299 Pls
5584 4317 Pls
5588 4216 Pls
5595 4198 Pls
5599 4170 Pls
5602 3975 Pls
5610 4252 Pls
5624 4005 Pls
5630 4190 Pls
5634 4105 Pls
5651 3852 Pls
5654 4172 Pls
5661 3810 Pls
5664 3878 Pls
5693 3978 Pls
5703 4141 Pls
5719 4005 Pls
5722 4129 Pls
5734 4194 Pls
5749 3879 Pls
5755 4096 Pls
5761 3792 Pls
5767 4129 Pls
5769 3930 Pls
5772 3980 Pls
5806 3915 Pls
5823 3942 Pls
5825 3963 Pls
5852 3851 Pls
5857 3842 Pls
5870 3764 Pls
5895 3862 Pls
5903 3991 Pls
5913 4016 Pls
5920 4063 Pls
5930 3896 Pls
5934 3907 Pls
5960 3921 Pls
5962 4027 Pls
5964 3996 Pls
5987 3766 Pls
5994 3717 Pls
5998 3702 Pls
6005 3832 Pls
6013 3937 Pls
6022 3764 Pls
6065 3892 Pls
6067 3798 Pls
6095 3658 Pls
6110 3765 Pls
6125 3890 Pls
6133 3812 Pls
6147 3738 Pls
6149 3827 Pls
6158 3748 Pls
6164 3795 Pls
6167 3596 Pls
6173 3517 Pls
6193 3688 Pls
6202 3736 Pls
6212 3570 Pls
6247 3533 Pls
6266 3597 Pls
6310 3367 Pls
6322 3459 Pls
6346 3377 Pls
6352 3327 Pls
6460 3279 Pls
6554 3127 Pls
6569 3135 Pls
6587 3170 Pls
6636 3001 Pls
6653 3085 Pls
6770 2827 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
