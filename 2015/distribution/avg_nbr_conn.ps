%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 16:37:50 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 16:37:50 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
5398 0 R
-63 0 V
stroke
1210 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.001)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 1317 M
31 0 V
5430 0 R
-31 0 V
1342 1675 M
31 0 V
5430 0 R
-31 0 V
1342 1929 M
31 0 V
5430 0 R
-31 0 V
1342 2127 M
31 0 V
5430 0 R
-31 0 V
1342 2288 M
31 0 V
5430 0 R
-31 0 V
1342 2424 M
31 0 V
5430 0 R
-31 0 V
1342 2542 M
31 0 V
5430 0 R
-31 0 V
1342 2646 M
31 0 V
5430 0 R
-31 0 V
-5430 94 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 3352 M
31 0 V
5430 0 R
-31 0 V
1342 3711 M
31 0 V
5430 0 R
-31 0 V
1342 3965 M
31 0 V
5430 0 R
-31 0 V
1342 4162 M
31 0 V
5430 0 R
-31 0 V
1342 4323 M
31 0 V
5430 0 R
-31 0 V
1342 4460 M
31 0 V
5430 0 R
-31 0 V
1342 4578 M
31 0 V
5430 0 R
-31 0 V
1342 4682 M
31 0 V
5430 0 R
-31 0 V
-5430 93 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1342 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1890 704 M
0 31 V
0 4040 R
0 -31 V
2211 704 M
0 31 V
0 4040 R
0 -31 V
2438 704 M
0 31 V
0 4040 R
0 -31 V
2614 704 M
0 31 V
0 4040 R
0 -31 V
2758 704 M
0 31 V
0 4040 R
0 -31 V
2880 704 M
0 31 V
0 4040 R
0 -31 V
2986 704 M
0 31 V
0 4040 R
0 -31 V
3079 704 M
0 31 V
0 4040 R
0 -31 V
3162 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3162 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3710 704 M
0 31 V
0 4040 R
0 -31 V
4031 704 M
0 31 V
0 4040 R
0 -31 V
4258 704 M
0 31 V
0 4040 R
0 -31 V
4435 704 M
0 31 V
0 4040 R
0 -31 V
4579 704 M
0 31 V
0 4040 R
0 -31 V
4701 704 M
0 31 V
0 4040 R
0 -31 V
4806 704 M
0 31 V
0 4040 R
0 -31 V
4899 704 M
0 31 V
0 4040 R
0 -31 V
4983 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4983 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5531 704 M
0 31 V
0 4040 R
0 -31 V
5851 704 M
0 31 V
0 4040 R
0 -31 V
6079 704 M
0 31 V
0 4040 R
0 -31 V
6255 704 M
0 31 V
0 4040 R
0 -31 V
6399 704 M
0 31 V
0 4040 R
0 -31 V
6521 704 M
0 31 V
0 4040 R
0 -31 V
6627 704 M
0 31 V
0 4040 R
0 -31 V
6720 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4072 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1342 2964 M
548 -379 V
321 255 V
227 -125 V
176 239 V
144 -9 V
122 130 V
106 -179 V
93 127 V
83 101 V
76 214 V
68 -200 V
64 171 V
58 123 V
55 -49 V
51 -97 V
48 50 V
45 270 V
43 -72 V
40 -51 V
39 94 V
37 169 V
35 -95 V
33 105 V
33 52 V
31 30 V
30 -89 V
28 165 V
28 -17 V
27 -27 V
26 50 V
25 191 V
24 -192 V
24 16 V
23 199 V
22 -244 V
22 -78 V
21 6 V
20 308 V
20 -152 V
20 199 V
19 -83 V
18 -87 V
19 356 V
17 -183 V
18 -49 V
17 -108 V
16 144 V
17 49 V
16 -129 V
15 10 V
16 137 V
15 -165 V
15 231 V
14 -99 V
14 103 V
14 -693 V
14 588 V
14 -52 V
13 -7 V
13 -1 V
13 16 V
12 45 V
25 -26 V
12 72 V
12 58 V
12 40 V
11 -254 V
12 340 V
11 -364 V
11 175 V
11 -2 V
11 -204 V
10 153 V
11 -36 V
10 195 V
10 -163 V
10 44 V
20 13 V
19 -3 V
10 8 V
9 169 V
9 -21 V
19 -239 V
9 99 V
17 -76 V
9 107 V
8 -62 V
9 146 V
8 -4 V
8 -188 V
9 21 V
8 -1 V
8 -50 V
31 -78 V
8 494 V
7 -698 V
15 520 V
8 -211 V
7 0 V
7 81 V
7 90 V
7 -96 V
stroke 5072 4245 M
7 98 V
7 146 V
7 -217 V
7 212 V
7 -196 V
7 -164 V
6 328 V
7 -190 V
13 -87 V
6 193 V
7 30 V
6 -160 V
6 214 V
7 -195 V
12 10 V
6 -38 V
12 174 V
12 -193 V
6 -161 V
6 109 V
11 232 V
6 -310 V
17 293 V
5 33 V
6 -232 V
5 -39 V
6 146 V
11 1 V
5 -4 V
5 -89 V
5 13 V
6 162 V
5 -38 V
10 -13 V
5 -180 V
5 202 V
10 -41 V
5 -381 V
5 340 V
5 -123 V
5 -73 V
24 -63 V
4 337 V
14 75 V
5 -108 V
5 8 V
4 -6 V
5 -72 V
9 -47 V
8 -249 V
5 367 V
4 59 V
4 7 V
5 -76 V
8 13 V
9 -37 V
4 -21 V
4 70 V
21 -144 V
8 21 V
4 -70 V
8 12 V
4 143 V
4 0 V
11 -57 V
8 -13 V
4 70 V
7 -80 V
8 -42 V
3 99 V
4 14 V
4 -195 V
7 70 V
7 72 V
11 30 V
4 33 V
7 -54 V
3 48 V
4 -120 V
7 87 V
13 -85 V
7 35 V
3 18 V
17 -122 V
3 133 V
7 -135 V
3 -23 V
29 107 V
9 75 V
15 -110 V
3 31 V
12 25 V
15 -81 V
6 56 V
5 -100 V
6 99 V
3 -71 V
3 -1 V
33 -40 V
16 35 V
3 34 V
26 -62 V
5 4 V
12 -48 V
stroke 5892 4012 M
25 76 V
7 0 V
10 20 V
7 -36 V
9 -23 V
5 7 V
25 1 V
2 18 V
2 -9 V
22 -64 V
7 7 V
4 57 V
6 -56 V
9 14 V
8 30 V
43 -26 V
2 -34 V
27 -58 V
15 85 V
14 -58 V
8 16 V
14 -37 V
2 8 V
8 8 V
6 21 V
3 -96 V
5 3 V
21 21 V
8 25 V
10 -37 V
34 -24 V
18 41 V
44 -116 V
11 48 V
24 -45 V
6 -12 V
105 -28 V
92 -65 V
15 -39 V
17 14 V
48 -76 V
17 27 V
114 -95 V
1342 2964 Pls
1890 2585 Pls
2211 2840 Pls
2438 2715 Pls
2614 2954 Pls
2758 2945 Pls
2880 3075 Pls
2986 2896 Pls
3079 3023 Pls
3162 3124 Pls
3238 3338 Pls
3306 3138 Pls
3370 3309 Pls
3428 3432 Pls
3483 3383 Pls
3534 3286 Pls
3582 3336 Pls
3627 3606 Pls
3670 3534 Pls
3710 3483 Pls
3749 3577 Pls
3786 3746 Pls
3821 3651 Pls
3854 3756 Pls
3887 3808 Pls
3918 3838 Pls
3948 3749 Pls
3976 3914 Pls
4004 3897 Pls
4031 3870 Pls
4057 3920 Pls
4082 4111 Pls
4106 3919 Pls
4130 3935 Pls
4153 4134 Pls
4175 3890 Pls
4197 3812 Pls
4218 3818 Pls
4238 4126 Pls
4258 3974 Pls
4278 4173 Pls
4297 4090 Pls
4315 4003 Pls
4334 4359 Pls
4351 4176 Pls
4369 4127 Pls
4386 4019 Pls
4402 4163 Pls
4419 4212 Pls
4435 4083 Pls
4450 4093 Pls
4466 4230 Pls
4481 4065 Pls
4496 4296 Pls
4510 4197 Pls
4524 4300 Pls
4538 3607 Pls
4552 4195 Pls
4566 4143 Pls
4579 4136 Pls
4592 4135 Pls
4605 4151 Pls
4617 4196 Pls
4642 4170 Pls
4654 4242 Pls
4666 4300 Pls
4678 4340 Pls
4689 4086 Pls
4701 4426 Pls
4712 4062 Pls
4723 4237 Pls
4734 4235 Pls
4745 4031 Pls
4755 4184 Pls
4766 4148 Pls
4776 4343 Pls
4786 4180 Pls
4796 4224 Pls
4816 4237 Pls
4835 4234 Pls
4845 4242 Pls
4854 4411 Pls
4863 4390 Pls
4882 4151 Pls
4891 4250 Pls
4908 4174 Pls
4917 4281 Pls
4925 4219 Pls
4934 4365 Pls
4942 4361 Pls
4950 4173 Pls
4959 4194 Pls
4967 4193 Pls
4975 4143 Pls
5006 4065 Pls
5014 4559 Pls
5021 3861 Pls
5036 4381 Pls
5044 4170 Pls
5051 4170 Pls
5058 4251 Pls
5065 4341 Pls
5072 4245 Pls
5079 4343 Pls
5086 4489 Pls
5093 4272 Pls
5100 4484 Pls
5107 4288 Pls
5114 4124 Pls
5120 4452 Pls
5127 4262 Pls
5140 4175 Pls
5146 4368 Pls
5153 4398 Pls
5159 4238 Pls
5165 4452 Pls
5172 4257 Pls
5184 4267 Pls
5190 4229 Pls
5202 4403 Pls
5214 4210 Pls
5220 4049 Pls
5226 4158 Pls
5237 4390 Pls
5243 4080 Pls
5260 4373 Pls
5265 4406 Pls
5271 4174 Pls
5276 4135 Pls
5282 4281 Pls
5293 4282 Pls
5298 4278 Pls
5303 4189 Pls
5308 4202 Pls
5314 4364 Pls
5319 4326 Pls
5329 4313 Pls
5334 4133 Pls
5339 4335 Pls
5349 4294 Pls
5354 3913 Pls
5359 4253 Pls
5364 4130 Pls
5369 4057 Pls
5393 3994 Pls
5397 4331 Pls
5411 4406 Pls
5416 4298 Pls
5421 4306 Pls
5425 4300 Pls
5430 4228 Pls
5439 4181 Pls
5447 3932 Pls
5452 4299 Pls
5456 4358 Pls
5460 4365 Pls
5465 4289 Pls
5473 4302 Pls
5482 4265 Pls
5486 4244 Pls
5490 4314 Pls
5511 4170 Pls
5519 4191 Pls
5523 4121 Pls
5531 4133 Pls
5535 4276 Pls
5539 4276 Pls
5550 4219 Pls
5558 4206 Pls
5562 4276 Pls
5569 4196 Pls
5577 4154 Pls
5580 4253 Pls
5584 4267 Pls
5588 4072 Pls
5595 4142 Pls
5602 4214 Pls
5613 4244 Pls
5617 4277 Pls
5624 4223 Pls
5627 4271 Pls
5631 4151 Pls
5638 4238 Pls
5651 4153 Pls
5658 4188 Pls
5661 4206 Pls
5678 4084 Pls
5681 4217 Pls
5688 4082 Pls
5691 4059 Pls
5720 4166 Pls
5729 4241 Pls
5744 4131 Pls
5747 4162 Pls
5759 4187 Pls
5774 4106 Pls
5780 4162 Pls
5785 4062 Pls
5791 4161 Pls
5794 4090 Pls
5797 4089 Pls
5830 4049 Pls
5846 4084 Pls
5849 4118 Pls
5875 4056 Pls
5880 4060 Pls
5892 4012 Pls
5917 4088 Pls
5924 4088 Pls
5934 4108 Pls
5941 4072 Pls
5950 4049 Pls
5955 4056 Pls
5980 4057 Pls
5982 4075 Pls
5984 4066 Pls
6006 4002 Pls
6013 4009 Pls
6017 4066 Pls
6023 4010 Pls
6032 4024 Pls
6040 4054 Pls
6083 4028 Pls
6085 3994 Pls
6112 3936 Pls
6127 4021 Pls
6141 3963 Pls
6149 3979 Pls
6163 3942 Pls
6165 3950 Pls
6173 3958 Pls
6179 3979 Pls
6182 3883 Pls
6187 3886 Pls
6208 3907 Pls
6216 3932 Pls
6226 3895 Pls
6260 3871 Pls
6278 3912 Pls
6322 3796 Pls
6333 3844 Pls
6357 3799 Pls
6363 3787 Pls
6468 3759 Pls
6560 3694 Pls
6575 3655 Pls
6592 3669 Pls
6640 3593 Pls
6657 3620 Pls
6771 3525 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
