%!PS-Adobe-2.0 EPSF-2.0
%%Title: clus_coeff.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 16:36:48 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clus_coeff.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 16:36:48 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 1317 M
31 0 V
5562 0 R
-31 0 V
1210 1675 M
31 0 V
5562 0 R
-31 0 V
1210 1929 M
31 0 V
5562 0 R
-31 0 V
1210 2127 M
31 0 V
5562 0 R
-31 0 V
1210 2288 M
31 0 V
5562 0 R
-31 0 V
1210 2424 M
31 0 V
5562 0 R
-31 0 V
1210 2542 M
31 0 V
5562 0 R
-31 0 V
1210 2646 M
31 0 V
5562 0 R
-31 0 V
-5562 94 R
63 0 V
5530 0 R
-63 0 V
stroke
1078 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 3352 M
31 0 V
5562 0 R
-31 0 V
1210 3711 M
31 0 V
5562 0 R
-31 0 V
1210 3965 M
31 0 V
5562 0 R
-31 0 V
1210 4162 M
31 0 V
5562 0 R
-31 0 V
1210 4323 M
31 0 V
5562 0 R
-31 0 V
1210 4460 M
31 0 V
5562 0 R
-31 0 V
1210 4578 M
31 0 V
5562 0 R
-31 0 V
1210 4682 M
31 0 V
5562 0 R
-31 0 V
-5562 93 R
63 0 V
5530 0 R
-63 0 V
stroke
1078 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1771 704 M
0 31 V
0 4040 R
0 -31 V
2100 704 M
0 31 V
0 4040 R
0 -31 V
2332 704 M
0 31 V
0 4040 R
0 -31 V
2513 704 M
0 31 V
0 4040 R
0 -31 V
2661 704 M
0 31 V
0 4040 R
0 -31 V
2786 704 M
0 31 V
0 4040 R
0 -31 V
2894 704 M
0 31 V
0 4040 R
0 -31 V
2989 704 M
0 31 V
0 4040 R
0 -31 V
3074 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3074 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3636 704 M
0 31 V
0 4040 R
0 -31 V
3964 704 M
0 31 V
0 4040 R
0 -31 V
4197 704 M
0 31 V
0 4040 R
0 -31 V
4377 704 M
0 31 V
0 4040 R
0 -31 V
4525 704 M
0 31 V
0 4040 R
0 -31 V
4650 704 M
0 31 V
0 4040 R
0 -31 V
4758 704 M
0 31 V
0 4040 R
0 -31 V
4853 704 M
0 31 V
0 4040 R
0 -31 V
4939 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4939 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5500 704 M
0 31 V
0 4040 R
0 -31 V
5828 704 M
0 31 V
0 4040 R
0 -31 V
6061 704 M
0 31 V
0 4040 R
0 -31 V
6242 704 M
0 31 V
0 4040 R
0 -31 V
6389 704 M
0 31 V
0 4040 R
0 -31 V
6514 704 M
0 31 V
0 4040 R
0 -31 V
6622 704 M
0 31 V
0 4040 R
0 -31 V
6718 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Cluster Coefficient)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4006 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Observed Value)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1771 704 M
0 1878 V
329 1848 V
232 -8 V
181 -122 V
148 98 V
125 -68 V
108 49 V
95 -45 V
85 18 V
78 -35 V
70 16 V
65 -32 V
60 51 V
56 -43 V
52 46 V
49 -98 V
46 155 V
44 -115 V
42 61 V
39 -33 V
38 9 V
36 -8 V
34 2 V
33 -24 V
32 4 V
31 114 V
29 -121 V
28 53 V
28 -98 V
26 20 V
26 66 V
25 -153 V
24 180 V
24 -88 V
22 -15 V
23 -10 V
21 129 V
21 -210 V
21 132 V
20 -32 V
19 -129 V
19 22 V
19 69 V
18 -70 V
18 -285 V
17 423 V
17 -32 V
17 72 V
16 -6 V
16 5 V
16 34 V
16 -308 V
15 215 V
15 109 V
14 -112 V
15 -71 V
14 -115 V
13 14 V
14 344 V
13 -49 V
14 -137 V
13 -136 V
12 -69 V
13 119 V
12 -82 V
12 40 V
12 122 V
12 -20 V
12 -556 V
11 366 V
12 33 V
22 268 V
11 -97 V
10 137 V
11 2 V
10 -105 V
11 -369 V
10 193 V
10 -52 V
10 396 V
10 -198 V
9 249 V
10 -562 V
10 449 V
9 -106 V
9 27 V
9 -184 V
9 289 V
9 -109 V
9 -113 V
9 -201 V
17 331 V
34 -306 V
16 418 V
8 -222 V
8 87 V
7 93 V
8 -458 V
15 333 V
8 141 V
7 33 V
8 194 V
stroke 5016 4643 M
7 -320 V
7 -523 V
8 589 V
7 -72 V
7 46 V
14 -163 V
7 164 V
7 -90 V
6 211 V
7 -403 V
7 380 V
6 -345 V
7 -3 V
6 119 V
7 257 V
6 -241 V
7 144 V
18 36 V
6 -449 V
7 182 V
6 231 V
6 -278 V
12 300 V
5 -483 V
12 -373 V
6 124 V
23 590 V
5 66 V
6 17 V
5 -782 V
6 663 V
10 -24 V
6 -436 V
10 340 V
11 -137 V
5 117 V
5 52 V
5 -29 V
5 347 V
5 -265 V
5 229 V
5 -758 V
5 510 V
5 145 V
5 33 V
15 -549 V
4 287 V
10 -50 V
4 239 V
5 -102 V
9 -106 V
5 59 V
5 -251 V
4 -78 V
9 363 V
9 -112 V
4 188 V
9 -44 V
9 74 V
8 -296 V
13 -56 V
4 332 V
9 -314 V
4 406 V
8 -156 V
8 -231 V
4 173 V
20 169 V
8 7 V
15 58 V
7 -203 V
4 141 V
4 -120 V
11 40 V
7 -429 V
8 456 V
3 -19 V
15 -324 V
3 173 V
7 63 V
4 80 V
13 -426 V
7 370 V
14 -208 V
3 -106 V
7 225 V
22 -84 V
3 144 V
7 -209 V
15 273 V
7 -19 V
3 -195 V
15 -11 V
9 -96 V
6 190 V
14 30 V
20 -232 V
9 16 V
8 101 V
17 -253 V
5 41 V
21 -36 V
8 111 V
13 13 V
stroke 5870 3868 M
3 -22 V
22 198 V
5 -89 V
18 -244 V
4 360 V
3 -229 V
2 70 V
14 -33 V
5 42 V
18 -16 V
3 69 V
13 12 V
20 -219 V
2 60 V
26 -80 V
6 173 V
25 -179 V
2 97 V
42 -40 V
1 -309 V
16 59 V
11 39 V
9 169 V
13 37 V
2 37 V
21 -238 V
9 71 V
29 96 V
10 23 V
1 -44 V
5 -156 V
21 151 V
12 -96 V
34 -293 V
10 30 V
13 78 V
48 -97 V
91 -48 V
125 -216 V
5 90 V
76 -127 V
6 -125 V
26 -290 V
79 184 V
1771 2582 Pls
2100 4430 Pls
2332 4422 Pls
2513 4300 Pls
2661 4398 Pls
2786 4330 Pls
2894 4379 Pls
2989 4334 Pls
3074 4352 Pls
3152 4317 Pls
3222 4333 Pls
3287 4301 Pls
3347 4352 Pls
3403 4309 Pls
3455 4355 Pls
3504 4257 Pls
3550 4412 Pls
3594 4297 Pls
3636 4358 Pls
3675 4325 Pls
3713 4334 Pls
3749 4326 Pls
3783 4328 Pls
3816 4304 Pls
3848 4308 Pls
3879 4422 Pls
3908 4301 Pls
3936 4354 Pls
3964 4256 Pls
3990 4276 Pls
4016 4342 Pls
4041 4189 Pls
4065 4369 Pls
4089 4281 Pls
4111 4266 Pls
4134 4256 Pls
4155 4385 Pls
4176 4175 Pls
4197 4307 Pls
4217 4275 Pls
4236 4146 Pls
4255 4168 Pls
4274 4237 Pls
4292 4167 Pls
4310 3882 Pls
4327 4305 Pls
4344 4273 Pls
4361 4345 Pls
4377 4339 Pls
4393 4344 Pls
4409 4378 Pls
4425 4070 Pls
4440 4285 Pls
4455 4394 Pls
4469 4282 Pls
4484 4211 Pls
4498 4096 Pls
4511 4110 Pls
4525 4454 Pls
4538 4405 Pls
4552 4268 Pls
4565 4132 Pls
4577 4063 Pls
4590 4182 Pls
4602 4100 Pls
4614 4140 Pls
4626 4262 Pls
4638 4242 Pls
4650 3686 Pls
4661 4052 Pls
4673 4085 Pls
4695 4353 Pls
4706 4256 Pls
4716 4393 Pls
4727 4395 Pls
4737 4290 Pls
4748 3921 Pls
4758 4114 Pls
4768 4062 Pls
4778 4458 Pls
4788 4260 Pls
4797 4509 Pls
4807 3947 Pls
4817 4396 Pls
4826 4290 Pls
4835 4317 Pls
4844 4133 Pls
4853 4422 Pls
4862 4313 Pls
4871 4200 Pls
4880 3999 Pls
4897 4330 Pls
4931 4024 Pls
4947 4442 Pls
4955 4220 Pls
4963 4307 Pls
4970 4400 Pls
4978 3942 Pls
4993 4275 Pls
5001 4416 Pls
5008 4449 Pls
5016 4643 Pls
5023 4323 Pls
5030 3800 Pls
5038 4389 Pls
5045 4317 Pls
5052 4363 Pls
5066 4200 Pls
5073 4364 Pls
5080 4274 Pls
5086 4485 Pls
5093 4082 Pls
5100 4462 Pls
5106 4117 Pls
5113 4114 Pls
5119 4233 Pls
5126 4490 Pls
5132 4249 Pls
5139 4393 Pls
5157 4429 Pls
5163 3980 Pls
5170 4162 Pls
5176 4393 Pls
5182 4115 Pls
5194 4415 Pls
5199 3932 Pls
5211 3559 Pls
5217 3683 Pls
5240 4273 Pls
5245 4339 Pls
5251 4356 Pls
5256 3574 Pls
5262 4237 Pls
5272 4213 Pls
5278 3777 Pls
5288 4117 Pls
5299 3980 Pls
5304 4097 Pls
5309 4149 Pls
5314 4120 Pls
5319 4467 Pls
5324 4202 Pls
5329 4431 Pls
5334 3673 Pls
5339 4183 Pls
5344 4328 Pls
5349 4361 Pls
5364 3812 Pls
5368 4099 Pls
5378 4049 Pls
5382 4288 Pls
5387 4186 Pls
5396 4080 Pls
5401 4139 Pls
5406 3888 Pls
5410 3810 Pls
5419 4173 Pls
5428 4061 Pls
5432 4249 Pls
5441 4205 Pls
5450 4279 Pls
5458 3983 Pls
5471 3927 Pls
5475 4259 Pls
5484 3945 Pls
5488 4351 Pls
5496 4195 Pls
5504 3964 Pls
5508 4137 Pls
5528 4306 Pls
5536 4313 Pls
5551 4371 Pls
5558 4168 Pls
5562 4309 Pls
5566 4189 Pls
5577 4229 Pls
5584 3800 Pls
5592 4256 Pls
5595 4237 Pls
5610 3913 Pls
5613 4086 Pls
5620 4149 Pls
5624 4229 Pls
5637 3803 Pls
5644 4173 Pls
5658 3965 Pls
5661 3859 Pls
5668 4084 Pls
5690 4000 Pls
5693 4144 Pls
5700 3935 Pls
5715 4208 Pls
5722 4189 Pls
5725 3994 Pls
5740 3983 Pls
5749 3887 Pls
5755 4077 Pls
5769 4107 Pls
5789 3875 Pls
5798 3891 Pls
5806 3992 Pls
5823 3739 Pls
5828 3780 Pls
5849 3744 Pls
5857 3855 Pls
5870 3868 Pls
5873 3846 Pls
5895 4044 Pls
5900 3955 Pls
5918 3711 Pls
5922 4071 Pls
5925 3842 Pls
5927 3912 Pls
5941 3879 Pls
5946 3921 Pls
5964 3905 Pls
5967 3974 Pls
5980 3986 Pls
6000 3767 Pls
6002 3827 Pls
6028 3747 Pls
6034 3920 Pls
6059 3741 Pls
6061 3838 Pls
6103 3798 Pls
6104 3489 Pls
6120 3548 Pls
6131 3587 Pls
6140 3756 Pls
6153 3793 Pls
6155 3830 Pls
6176 3592 Pls
6185 3663 Pls
6214 3759 Pls
6224 3782 Pls
6225 3738 Pls
6230 3582 Pls
6251 3733 Pls
6263 3637 Pls
6297 3344 Pls
6307 3374 Pls
6320 3452 Pls
6368 3355 Pls
6459 3307 Pls
6584 3091 Pls
6589 3181 Pls
6665 3054 Pls
6671 2929 Pls
6697 2639 Pls
6776 2823 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
