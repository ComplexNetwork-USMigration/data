%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 16:36:48 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 16:36:48 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
63 0 V
5398 0 R
-63 0 V
stroke
1210 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.001)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 1317 M
31 0 V
5430 0 R
-31 0 V
1342 1675 M
31 0 V
5430 0 R
-31 0 V
1342 1929 M
31 0 V
5430 0 R
-31 0 V
1342 2127 M
31 0 V
5430 0 R
-31 0 V
1342 2288 M
31 0 V
5430 0 R
-31 0 V
1342 2424 M
31 0 V
5430 0 R
-31 0 V
1342 2542 M
31 0 V
5430 0 R
-31 0 V
1342 2646 M
31 0 V
5430 0 R
-31 0 V
-5430 94 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 3352 M
31 0 V
5430 0 R
-31 0 V
1342 3711 M
31 0 V
5430 0 R
-31 0 V
1342 3965 M
31 0 V
5430 0 R
-31 0 V
1342 4162 M
31 0 V
5430 0 R
-31 0 V
1342 4323 M
31 0 V
5430 0 R
-31 0 V
1342 4460 M
31 0 V
5430 0 R
-31 0 V
1342 4578 M
31 0 V
5430 0 R
-31 0 V
1342 4682 M
31 0 V
5430 0 R
-31 0 V
-5430 93 R
63 0 V
5398 0 R
-63 0 V
stroke
1210 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1342 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1342 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1890 704 M
0 31 V
0 4040 R
0 -31 V
2211 704 M
0 31 V
0 4040 R
0 -31 V
2438 704 M
0 31 V
0 4040 R
0 -31 V
2614 704 M
0 31 V
0 4040 R
0 -31 V
2758 704 M
0 31 V
0 4040 R
0 -31 V
2880 704 M
0 31 V
0 4040 R
0 -31 V
2986 704 M
0 31 V
0 4040 R
0 -31 V
3079 704 M
0 31 V
0 4040 R
0 -31 V
3162 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3162 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3710 704 M
0 31 V
0 4040 R
0 -31 V
4031 704 M
0 31 V
0 4040 R
0 -31 V
4258 704 M
0 31 V
0 4040 R
0 -31 V
4435 704 M
0 31 V
0 4040 R
0 -31 V
4579 704 M
0 31 V
0 4040 R
0 -31 V
4701 704 M
0 31 V
0 4040 R
0 -31 V
4806 704 M
0 31 V
0 4040 R
0 -31 V
4899 704 M
0 31 V
0 4040 R
0 -31 V
4983 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4983 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5531 704 M
0 31 V
0 4040 R
0 -31 V
5851 704 M
0 31 V
0 4040 R
0 -31 V
6079 704 M
0 31 V
0 4040 R
0 -31 V
6255 704 M
0 31 V
0 4040 R
0 -31 V
6399 704 M
0 31 V
0 4040 R
0 -31 V
6521 704 M
0 31 V
0 4040 R
0 -31 V
6627 704 M
0 31 V
0 4040 R
0 -31 V
6720 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4072 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1342 3072 M
548 -572 V
321 293 V
227 -179 V
176 201 V
144 191 V
122 62 V
106 -163 V
93 228 V
83 -21 V
76 42 V
68 1 V
64 75 V
58 104 V
55 65 V
51 79 V
48 -21 V
45 71 V
43 95 V
40 -123 V
39 94 V
37 226 V
35 -224 V
33 250 V
33 33 V
31 -101 V
30 154 V
28 -39 V
28 -14 V
27 -22 V
26 -34 V
25 317 V
24 -263 V
24 7 V
23 -3 V
22 108 V
22 154 V
21 -78 V
20 -91 V
20 94 V
20 88 V
19 -421 V
18 321 V
19 178 V
17 -322 V
18 -101 V
17 326 V
16 118 V
17 -125 V
16 249 V
15 -47 V
16 -29 V
15 -273 V
15 240 V
14 44 V
14 -219 V
14 91 V
14 6 V
14 -99 V
13 130 V
13 100 V
13 -38 V
12 -49 V
13 -47 V
12 -32 V
12 63 V
12 61 V
12 14 V
11 -94 V
12 -114 V
11 49 V
11 105 V
22 -84 V
10 71 V
11 188 V
10 -118 V
10 -49 V
10 -178 V
10 42 V
10 180 V
10 34 V
9 -55 V
10 20 V
9 -171 V
9 98 V
10 163 V
9 -329 V
9 175 V
8 22 V
9 -18 V
9 -159 V
8 186 V
17 108 V
33 -159 V
16 116 V
7 -31 V
8 -18 V
8 -113 V
7 -52 V
15 148 V
8 121 V
7 -140 V
7 212 V
stroke 5058 4451 M
7 -213 V
7 -209 V
7 309 V
7 23 V
7 38 V
14 -88 V
7 65 V
6 -74 V
7 -45 V
6 -43 V
7 127 V
6 -66 V
7 51 V
6 -36 V
6 142 V
7 -61 V
6 -45 V
18 -78 V
6 -141 V
6 138 V
6 44 V
6 -248 V
12 278 V
5 -205 V
12 25 V
5 -73 V
22 202 V
6 60 V
5 -72 V
6 -235 V
5 310 V
10 -59 V
6 -244 V
10 98 V
10 64 V
5 94 V
5 -46 V
5 -12 V
5 178 V
5 -109 V
5 -1 V
5 -231 V
5 164 V
5 73 V
4 64 V
14 -455 V
5 289 V
9 0 V
5 33 V
5 56 V
9 -277 V
4 212 V
5 -91 V
4 -99 V
9 165 V
8 -39 V
5 129 V
8 -5 V
9 -6 V
8 -89 V
12 -73 V
5 168 V
8 -118 V
4 133 V
8 -125 V
8 -35 V
4 99 V
19 -30 V
7 31 V
15 -17 V
8 -4 V
3 -3 V
4 -11 V
11 -2 V
7 -153 V
7 146 V
4 14 V
14 -129 V
3 133 V
7 -13 V
3 9 V
14 -136 V
6 96 V
14 -50 V
3 -92 V
6 170 V
22 -62 V
4 93 V
6 -147 V
15 69 V
6 6 V
3 -80 V
15 49 V
9 -52 V
6 65 V
14 -15 V
19 -85 V
9 12 V
8 82 V
16 -116 V
5 3 V
21 -45 V
8 32 V
12 18 V
stroke 5892 4022 M
3 63 V
22 14 V
5 -31 V
16 -51 V
5 36 V
2 18 V
3 -27 V
14 -42 V
4 30 V
18 16 V
2 -5 V
14 3 V
19 -59 V
2 -8 V
25 12 V
6 -15 V
25 3 V
2 10 V
40 -5 V
2 -169 V
15 78 V
11 -23 V
9 87 V
12 13 V
2 -49 V
21 -47 V
8 21 V
29 -16 V
9 -21 V
2 26 V
5 -18 V
20 -1 V
11 18 V
34 -66 V
10 -23 V
13 24 V
46 -39 V
89 -53 V
122 -100 V
5 24 V
74 -58 V
7 -36 V
24 49 V
77 -108 V
1342 3072 Pls
1890 2500 Pls
2211 2793 Pls
2438 2614 Pls
2614 2815 Pls
2758 3006 Pls
2880 3068 Pls
2986 2905 Pls
3079 3133 Pls
3162 3112 Pls
3238 3154 Pls
3306 3155 Pls
3370 3230 Pls
3428 3334 Pls
3483 3399 Pls
3534 3478 Pls
3582 3457 Pls
3627 3528 Pls
3670 3623 Pls
3710 3500 Pls
3749 3594 Pls
3786 3820 Pls
3821 3596 Pls
3854 3846 Pls
3887 3879 Pls
3918 3778 Pls
3948 3932 Pls
3976 3893 Pls
4004 3879 Pls
4031 3857 Pls
4057 3823 Pls
4082 4140 Pls
4106 3877 Pls
4130 3884 Pls
4153 3881 Pls
4175 3989 Pls
4197 4143 Pls
4218 4065 Pls
4238 3974 Pls
4258 4068 Pls
4278 4156 Pls
4297 3735 Pls
4315 4056 Pls
4334 4234 Pls
4351 3912 Pls
4369 3811 Pls
4386 4137 Pls
4402 4255 Pls
4419 4130 Pls
4435 4379 Pls
4450 4332 Pls
4466 4303 Pls
4481 4030 Pls
4496 4270 Pls
4510 4314 Pls
4524 4095 Pls
4538 4186 Pls
4552 4192 Pls
4566 4093 Pls
4579 4223 Pls
4592 4323 Pls
4605 4285 Pls
4617 4236 Pls
4630 4189 Pls
4642 4157 Pls
4654 4220 Pls
4666 4281 Pls
4678 4295 Pls
4689 4201 Pls
4701 4087 Pls
4712 4136 Pls
4723 4241 Pls
4745 4157 Pls
4755 4228 Pls
4766 4416 Pls
4776 4298 Pls
4786 4249 Pls
4796 4071 Pls
4806 4113 Pls
4816 4293 Pls
4826 4327 Pls
4835 4272 Pls
4845 4292 Pls
4854 4121 Pls
4863 4219 Pls
4873 4382 Pls
4882 4053 Pls
4891 4228 Pls
4899 4250 Pls
4908 4232 Pls
4917 4073 Pls
4925 4259 Pls
4942 4367 Pls
4975 4208 Pls
4991 4324 Pls
4998 4293 Pls
5006 4275 Pls
5014 4162 Pls
5021 4110 Pls
5036 4258 Pls
5044 4379 Pls
5051 4239 Pls
5058 4451 Pls
5065 4238 Pls
5072 4029 Pls
5079 4338 Pls
5086 4361 Pls
5093 4399 Pls
5107 4311 Pls
5114 4376 Pls
5120 4302 Pls
5127 4257 Pls
5133 4214 Pls
5140 4341 Pls
5146 4275 Pls
5153 4326 Pls
5159 4290 Pls
5165 4432 Pls
5172 4371 Pls
5178 4326 Pls
5196 4248 Pls
5202 4107 Pls
5208 4245 Pls
5214 4289 Pls
5220 4041 Pls
5232 4319 Pls
5237 4114 Pls
5249 4139 Pls
5254 4066 Pls
5276 4268 Pls
5282 4328 Pls
5287 4256 Pls
5293 4021 Pls
5298 4331 Pls
5308 4272 Pls
5314 4028 Pls
5324 4126 Pls
5334 4190 Pls
5339 4284 Pls
5344 4238 Pls
5349 4226 Pls
5354 4404 Pls
5359 4295 Pls
5364 4294 Pls
5369 4063 Pls
5374 4227 Pls
5379 4300 Pls
5383 4364 Pls
5397 3909 Pls
5402 4198 Pls
5411 4198 Pls
5416 4231 Pls
5421 4287 Pls
5430 4010 Pls
5434 4222 Pls
5439 4131 Pls
5443 4032 Pls
5452 4197 Pls
5460 4158 Pls
5465 4287 Pls
5473 4282 Pls
5482 4276 Pls
5490 4187 Pls
5502 4114 Pls
5507 4282 Pls
5515 4164 Pls
5519 4297 Pls
5527 4172 Pls
5535 4137 Pls
5539 4236 Pls
5558 4206 Pls
5565 4237 Pls
5580 4220 Pls
5588 4216 Pls
5591 4213 Pls
5595 4202 Pls
5606 4200 Pls
5613 4047 Pls
5620 4193 Pls
5624 4207 Pls
5638 4078 Pls
5641 4211 Pls
5648 4198 Pls
5651 4207 Pls
5665 4071 Pls
5671 4167 Pls
5685 4117 Pls
5688 4025 Pls
5694 4195 Pls
5716 4133 Pls
5720 4226 Pls
5726 4079 Pls
5741 4148 Pls
5747 4154 Pls
5750 4074 Pls
5765 4123 Pls
5774 4071 Pls
5780 4136 Pls
5794 4121 Pls
5813 4036 Pls
5822 4048 Pls
5830 4130 Pls
5846 4014 Pls
5851 4017 Pls
5872 3972 Pls
5880 4004 Pls
5892 4022 Pls
5895 4085 Pls
5917 4099 Pls
5922 4068 Pls
5938 4017 Pls
5943 4053 Pls
5945 4071 Pls
5948 4044 Pls
5962 4002 Pls
5966 4032 Pls
5984 4048 Pls
5986 4043 Pls
6000 4046 Pls
6019 3987 Pls
6021 3979 Pls
6046 3991 Pls
6052 3976 Pls
6077 3979 Pls
6079 3989 Pls
6119 3984 Pls
6121 3815 Pls
6136 3893 Pls
6147 3870 Pls
6156 3957 Pls
6168 3970 Pls
6170 3921 Pls
6191 3874 Pls
6199 3895 Pls
6228 3879 Pls
6237 3858 Pls
6239 3884 Pls
6244 3866 Pls
6264 3865 Pls
6275 3883 Pls
6309 3817 Pls
6319 3794 Pls
6332 3818 Pls
6378 3779 Pls
6467 3726 Pls
6589 3626 Pls
6594 3650 Pls
6668 3592 Pls
6675 3556 Pls
6699 3605 Pls
6776 3497 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1342 4775 N
0 -4071 V
5461 0 V
0 4071 V
-5461 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
