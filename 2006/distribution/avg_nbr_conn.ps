%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_nbr_conn.ps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Feb 18 21:12:55 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avg_nbr_conn.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (bcharyyev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 18 21:12:55 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.01)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 1929 M
31 0 V
5562 0 R
-31 0 V
1210 2646 M
31 0 V
5562 0 R
-31 0 V
1210 3155 M
31 0 V
5562 0 R
-31 0 V
1210 3550 M
31 0 V
5562 0 R
-31 0 V
1210 3872 M
31 0 V
5562 0 R
-31 0 V
1210 4144 M
31 0 V
5562 0 R
-31 0 V
1210 4380 M
31 0 V
5562 0 R
-31 0 V
1210 4589 M
31 0 V
5562 0 R
-31 0 V
1210 4775 M
63 0 V
5530 0 R
-63 0 V
stroke
1078 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1631 704 M
0 31 V
0 4040 R
0 -31 V
1877 704 M
0 31 V
0 4040 R
0 -31 V
2052 704 M
0 31 V
0 4040 R
0 -31 V
2187 704 M
0 31 V
0 4040 R
0 -31 V
2298 704 M
0 31 V
0 4040 R
0 -31 V
2392 704 M
0 31 V
0 4040 R
0 -31 V
2473 704 M
0 31 V
0 4040 R
0 -31 V
2544 704 M
0 31 V
0 4040 R
0 -31 V
2608 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2608 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3029 704 M
0 31 V
0 4040 R
0 -31 V
3275 704 M
0 31 V
0 4040 R
0 -31 V
3450 704 M
0 31 V
0 4040 R
0 -31 V
3586 704 M
0 31 V
0 4040 R
0 -31 V
3696 704 M
0 31 V
0 4040 R
0 -31 V
3790 704 M
0 31 V
0 4040 R
0 -31 V
3871 704 M
0 31 V
0 4040 R
0 -31 V
3943 704 M
0 31 V
0 4040 R
0 -31 V
4007 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4007 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4427 704 M
0 31 V
0 4040 R
0 -31 V
4674 704 M
0 31 V
0 4040 R
0 -31 V
4848 704 M
0 31 V
0 4040 R
0 -31 V
4984 704 M
0 31 V
0 4040 R
0 -31 V
5095 704 M
0 31 V
0 4040 R
0 -31 V
5188 704 M
0 31 V
0 4040 R
0 -31 V
5269 704 M
0 31 V
0 4040 R
0 -31 V
5341 704 M
0 31 V
0 4040 R
0 -31 V
5405 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5405 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5826 704 M
0 31 V
0 4040 R
0 -31 V
6072 704 M
0 31 V
0 4040 R
0 -31 V
6247 704 M
0 31 V
0 4040 R
0 -31 V
6382 704 M
0 31 V
0 4040 R
0 -31 V
6493 704 M
0 31 V
0 4040 R
0 -31 V
6586 704 M
0 31 V
0 4040 R
0 -31 V
6667 704 M
0 31 V
0 4040 R
0 -31 V
6739 704 M
0 31 V
0 4040 R
0 -31 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10000)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Average Neighbor Degree)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4006 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Node degree)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 877 M
[ [(Helvetica) 220.0 0.0 true true 0 (Data)]
] -73.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5948 877 M
591 0 V
1210 1445 M
1631 857 L
246 554 V
175 -381 V
135 103 V
111 466 V
94 -85 V
81 107 V
71 -95 V
64 9 V
58 726 V
53 -442 V
49 152 V
45 204 V
41 -38 V
40 108 V
36 -202 V
35 404 V
33 59 V
31 -101 V
30 97 V
28 267 V
27 101 V
26 -74 V
25 490 V
23 -564 V
23 433 V
22 -1 V
22 -143 V
20 -190 V
20 573 V
20 -46 V
18 13 V
18 -36 V
18 -52 V
17 465 V
17 -163 V
16 -207 V
16 105 V
15 -8 V
15 -63 V
15 359 V
14 -141 V
14 -117 V
14 -359 V
13 647 V
13 -491 V
13 338 V
12 271 V
13 -213 V
12 -265 V
11 335 V
12 12 V
11 180 V
11 -354 V
11 -412 V
11 494 V
11 29 V
10 -190 V
10 77 V
10 549 V
10 -478 V
10 361 V
9 275 V
10 -297 V
9 -332 V
9 326 V
9 24 V
9 -15 V
9 -101 V
9 -132 V
8 40 V
8 207 V
9 -186 V
8 426 V
8 -633 V
8 149 V
8 -51 V
7 356 V
8 -264 V
8 -155 V
7 432 V
7 -302 V
8 123 V
7 -49 V
7 -58 V
7 188 V
7 -295 V
7 -119 V
7 337 V
6 6 V
7 -382 V
6 463 V
7 -66 V
6 125 V
13 -160 V
6 5 V
6 19 V
7 -71 V
6 -143 V
11 54 V
6 67 V
6 302 V
6 -257 V
6 -99 V
5 -127 V
stroke 4053 3664 M
6 305 V
5 319 V
11 -230 V
6 90 V
5 -234 V
5 -114 V
6 25 V
10 368 V
5 -2 V
10 -553 V
5 344 V
5 -241 V
5 53 V
5 180 V
5 -163 V
5 304 V
14 -414 V
4 185 V
5 -424 V
5 137 V
4 189 V
5 226 V
4 -243 V
5 241 V
4 -279 V
4 496 V
5 -172 V
4 -264 V
4 99 V
9 -196 V
4 325 V
4 29 V
4 -70 V
9 180 V
8 -304 V
4 306 V
4 -196 V
4 -4 V
4 -163 V
4 355 V
3 -556 V
4 -227 V
4 501 V
4 429 V
4 -118 V
3 -148 V
4 -338 V
4 224 V
7 269 V
8 -340 V
3 347 V
7 -89 V
7 -208 V
7 151 V
7 -85 V
4 122 V
3 15 V
7 -340 V
6 228 V
4 -536 V
3 242 V
19 535 V
4 -127 V
3 -203 V
3 159 V
3 -2 V
3 -414 V
3 209 V
3 35 V
15 78 V
3 -284 V
3 349 V
3 -232 V
6 122 V
3 -104 V
3 -280 V
3 402 V
6 -71 V
11 -50 V
6 -26 V
5 35 V
6 -93 V
5 -96 V
5 111 V
8 248 V
13 -42 V
5 -136 V
3 -211 V
5 316 V
10 -453 V
3 451 V
5 128 V
9 -417 V
3 345 V
2 -65 V
5 -155 V
2 -66 V
5 104 V
2 104 V
7 -101 V
12 96 V
7 22 V
2 -164 V
7 -267 V
stroke 4619 3487 M
2 244 V
2 90 V
9 -34 V
8 22 V
7 18 V
4 -82 V
2 118 V
4 -292 V
2 241 V
2 -121 V
9 -32 V
4 213 V
2 -50 V
6 -120 V
4 -104 V
4 -42 V
6 15 V
3 185 V
8 -9 V
2 -358 V
4 371 V
5 -222 V
2 164 V
21 -75 V
9 -88 V
10 75 V
14 -44 V
5 -27 V
24 -116 V
3 203 V
5 -77 V
6 -70 V
3 -108 V
2 135 V
11 77 V
14 -109 V
4 -7 V
2 42 V
9 -2 V
1 -19 V
5 34 V
4 35 V
3 -103 V
12 -53 V
8 101 V
17 -231 V
2 134 V
13 10 V
11 -38 V
10 -11 V
1 10 V
9 -1 V
1 69 V
10 -151 V
5 -161 V
13 170 V
4 31 V
8 -16 V
11 -100 V
19 48 V
9 41 V
5 -133 V
13 84 V
1 -66 V
19 -29 V
1 51 V
26 -75 V
8 7 V
2 -68 V
19 -37 V
20 -61 V
35 -22 V
122 -177 V
15 -70 V
25 7 V
12 -109 V
38 26 V
108 -266 V
1210 1445 Pls
1631 857 Pls
1877 1411 Pls
2052 1030 Pls
2187 1133 Pls
2298 1599 Pls
2392 1514 Pls
2473 1621 Pls
2544 1526 Pls
2608 1535 Pls
2666 2261 Pls
2719 1819 Pls
2768 1971 Pls
2813 2175 Pls
2854 2137 Pls
2894 2245 Pls
2930 2043 Pls
2965 2447 Pls
2998 2506 Pls
3029 2405 Pls
3059 2502 Pls
3087 2769 Pls
3114 2870 Pls
3140 2796 Pls
3165 3286 Pls
3188 2722 Pls
3211 3155 Pls
3233 3154 Pls
3255 3011 Pls
3275 2821 Pls
3295 3394 Pls
3315 3348 Pls
3333 3361 Pls
3351 3325 Pls
3369 3273 Pls
3386 3738 Pls
3403 3575 Pls
3419 3368 Pls
3435 3473 Pls
3450 3465 Pls
3465 3402 Pls
3480 3761 Pls
3494 3620 Pls
3508 3503 Pls
3522 3144 Pls
3535 3791 Pls
3548 3300 Pls
3561 3638 Pls
3573 3909 Pls
3586 3696 Pls
3598 3431 Pls
3609 3766 Pls
3621 3778 Pls
3632 3958 Pls
3643 3604 Pls
3654 3192 Pls
3665 3686 Pls
3676 3715 Pls
3686 3525 Pls
3696 3602 Pls
3706 4151 Pls
3716 3673 Pls
3726 4034 Pls
3735 4309 Pls
3745 4012 Pls
3754 3680 Pls
3763 4006 Pls
3772 4030 Pls
3781 4015 Pls
3790 3914 Pls
3799 3782 Pls
3807 3822 Pls
3815 4029 Pls
3824 3843 Pls
3832 4269 Pls
3840 3636 Pls
3848 3785 Pls
3856 3734 Pls
3863 4090 Pls
3871 3826 Pls
3879 3671 Pls
3886 4103 Pls
3893 3801 Pls
3901 3924 Pls
3908 3875 Pls
3915 3817 Pls
3922 4005 Pls
3929 3710 Pls
3936 3591 Pls
3943 3928 Pls
3949 3934 Pls
3956 3552 Pls
3962 4015 Pls
3969 3949 Pls
3975 4074 Pls
3988 3914 Pls
3994 3919 Pls
4000 3938 Pls
4007 3867 Pls
4013 3724 Pls
4024 3778 Pls
4030 3845 Pls
4036 4147 Pls
4042 3890 Pls
4048 3791 Pls
4053 3664 Pls
4059 3969 Pls
4064 4288 Pls
4075 4058 Pls
4081 4148 Pls
4086 3914 Pls
4091 3800 Pls
4097 3825 Pls
4107 4193 Pls
4112 4191 Pls
4122 3638 Pls
4127 3982 Pls
4132 3741 Pls
4137 3794 Pls
4142 3974 Pls
4147 3811 Pls
4152 4115 Pls
4166 3701 Pls
4170 3886 Pls
4175 3462 Pls
4180 3599 Pls
4184 3788 Pls
4189 4014 Pls
4193 3771 Pls
4198 4012 Pls
4202 3733 Pls
4206 4229 Pls
4211 4057 Pls
4215 3793 Pls
4219 3892 Pls
4228 3696 Pls
4232 4021 Pls
4236 4050 Pls
4240 3980 Pls
4249 4160 Pls
4257 3856 Pls
4261 4162 Pls
4265 3966 Pls
4269 3962 Pls
4273 3799 Pls
4277 4154 Pls
4280 3598 Pls
4284 3371 Pls
4288 3872 Pls
4292 4301 Pls
4296 4183 Pls
4299 4035 Pls
4303 3697 Pls
4307 3921 Pls
4314 4190 Pls
4322 3850 Pls
4325 4197 Pls
4332 4108 Pls
4339 3900 Pls
4346 4051 Pls
4353 3966 Pls
4357 4088 Pls
4360 4103 Pls
4367 3763 Pls
4373 3991 Pls
4377 3455 Pls
4380 3697 Pls
4399 4232 Pls
4403 4105 Pls
4406 3902 Pls
4409 4061 Pls
4412 4059 Pls
4415 3645 Pls
4418 3854 Pls
4421 3889 Pls
4436 3967 Pls
4439 3683 Pls
4442 4032 Pls
4445 3800 Pls
4451 3922 Pls
4454 3818 Pls
4457 3538 Pls
4460 3940 Pls
4466 3869 Pls
4477 3819 Pls
4483 3793 Pls
4488 3828 Pls
4494 3735 Pls
4499 3639 Pls
4504 3750 Pls
4512 3998 Pls
4525 3956 Pls
4530 3820 Pls
4533 3609 Pls
4538 3925 Pls
4548 3472 Pls
4551 3923 Pls
4556 4051 Pls
4565 3634 Pls
4568 3979 Pls
4570 3914 Pls
4575 3759 Pls
4577 3693 Pls
4582 3797 Pls
4584 3901 Pls
4591 3800 Pls
4603 3896 Pls
4610 3918 Pls
4612 3754 Pls
4619 3487 Pls
4621 3731 Pls
4623 3821 Pls
4632 3787 Pls
4640 3809 Pls
4647 3827 Pls
4651 3745 Pls
4653 3863 Pls
4657 3571 Pls
4659 3812 Pls
4661 3691 Pls
4670 3659 Pls
4674 3872 Pls
4676 3822 Pls
4682 3702 Pls
4686 3598 Pls
4690 3556 Pls
4696 3571 Pls
4699 3756 Pls
4707 3747 Pls
4709 3389 Pls
4713 3760 Pls
4718 3538 Pls
4720 3702 Pls
4741 3627 Pls
4750 3539 Pls
4760 3614 Pls
4774 3570 Pls
4779 3543 Pls
4803 3427 Pls
4806 3630 Pls
4811 3553 Pls
4817 3483 Pls
4820 3375 Pls
4822 3510 Pls
4833 3587 Pls
4847 3478 Pls
4851 3471 Pls
4853 3513 Pls
4862 3511 Pls
4863 3492 Pls
4868 3526 Pls
4872 3561 Pls
4875 3458 Pls
4887 3405 Pls
4895 3506 Pls
4912 3275 Pls
4914 3409 Pls
4927 3419 Pls
4938 3381 Pls
4948 3370 Pls
4949 3380 Pls
4958 3379 Pls
4959 3448 Pls
4969 3297 Pls
4974 3136 Pls
4987 3306 Pls
4991 3337 Pls
4999 3321 Pls
5010 3221 Pls
5029 3269 Pls
5038 3310 Pls
5043 3177 Pls
5056 3261 Pls
5057 3195 Pls
5076 3166 Pls
5077 3217 Pls
5103 3142 Pls
5111 3149 Pls
5113 3081 Pls
5132 3044 Pls
5152 2983 Pls
5187 2961 Pls
5309 2784 Pls
5324 2714 Pls
5349 2721 Pls
5361 2612 Pls
5399 2638 Pls
5507 2372 Pls
6243 877 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
